<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>â€“ Running Kubernetes on Photon OS</title><link>/docs/user-guide/kubernetes-on-photon-os/running-kubernetes-on-photon-os/</link><description>Recent content in Running Kubernetes on Photon OS on</description><generator>Hugo -- gohugo.io</generator><atom:link href="/docs/user-guide/kubernetes-on-photon-os/running-kubernetes-on-photon-os/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: System Information</title><link>/docs/user-guide/kubernetes-on-photon-os/running-kubernetes-on-photon-os/system-information/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/user-guide/kubernetes-on-photon-os/running-kubernetes-on-photon-os/system-information/</guid><description>
&lt;p>Hosts:&lt;/p>
&lt;pre>&lt;code>photon-master = 192.168.121.9
photon-node = 192.168.121.65
&lt;/code>&lt;/pre></description></item><item><title>Docs: Prepare the Hosts</title><link>/docs/user-guide/kubernetes-on-photon-os/running-kubernetes-on-photon-os/prepare-the-hosts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/user-guide/kubernetes-on-photon-os/running-kubernetes-on-photon-os/prepare-the-hosts/</guid><description>
&lt;p>The following packages have to be installed. If the &lt;code>tdnf&lt;/code> command returns &amp;ldquo;Nothing to do,&amp;rdquo; the package is already installed.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Install Kubernetes on all hosts (both &lt;code>photon-master&lt;/code> and &lt;code>photon-node&lt;/code>).&lt;/p>
&lt;pre>&lt;code class="language-console" data-lang="console">tdnf install kubernetes
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>Install iptables on photon-master and photon-node:&lt;/p>
&lt;pre>&lt;code class="language-console" data-lang="console">tdnf install iptables
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>Open the tcp port 8080 (api service) on the photon-master in the firewall&lt;/p>
&lt;pre>&lt;code class="language-console" data-lang="console">iptables -A INPUT -p tcp --dport 8080 -j ACCEPT
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>Open the tcp port 10250 (api service) on the photon-node in the firewall&lt;/p>
&lt;pre>&lt;code class="language-console" data-lang="console">iptables -A INPUT -p tcp --dport 10250 -j ACCEPT
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>Install Docker on photon-node:&lt;/p>
&lt;pre>&lt;code class="language-console" data-lang="console">tdnf install docker
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>Add master and node to /etc/hosts on all machines (not needed if the hostnames are already in DNS). Make sure that communication works between photon-master and photon-node by using a utility such as ping.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;192.168.121.9 photon-master
&lt;/span>&lt;span style="color:#4e9a06">192.168.121.65 photon-node&amp;#34;&lt;/span> &amp;gt;&amp;gt; /etc/hosts
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Edit /etc/kubernetes/config, which will be the same on all the hosts (master and node), so that it contains the following lines:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ini" data-lang="ini">&lt;span style="color:#8f5902;font-style:italic"># Comma separated list of nodes in the etcd cluster&lt;/span>
&lt;span style="color:#c4a000">KUBE_MASTER&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;--master=http://photon-master:8080&amp;#34;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># logging to stderr routes it to the systemd journal&lt;/span>
&lt;span style="color:#c4a000">KUBE_LOGTOSTDERR&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;--logtostderr=true&amp;#34;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># journal message level, 0 is debug&lt;/span>
&lt;span style="color:#c4a000">KUBE_LOG_LEVEL&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;--v=0&amp;#34;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Should this cluster be allowed to run privileged docker containers&lt;/span>
&lt;span style="color:#c4a000">KUBE_ALLOW_PRIV&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;--allow_privileged=false&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul></description></item><item><title>Docs: Configure Kubernetes Services on the Master</title><link>/docs/user-guide/kubernetes-on-photon-os/running-kubernetes-on-photon-os/configure-kubernetes-on-master/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/user-guide/kubernetes-on-photon-os/running-kubernetes-on-photon-os/configure-kubernetes-on-master/</guid><description>
&lt;p>Perform the following steps to configure Kubernetes services on the master:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Edit &lt;code>/etc/kubernetes/apiserver&lt;/code> to appear as such. The &lt;code>service_cluster_ip_range&lt;/code> IP addresses must be an unused block of addresses, not used anywhere else. They do not need to be routed or assigned to anything.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ini" data-lang="ini">&lt;span style="color:#8f5902;font-style:italic"># The address on the local server to listen to.&lt;/span>
&lt;span style="color:#c4a000">KUBE_API_ADDRESS&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;--address=0.0.0.0&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06"> &lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Comma separated list of nodes in the etcd cluster&lt;/span>
&lt;span style="color:#c4a000">KUBE_ETCD_SERVERS&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;--etcd-servers=http://127.0.0.1:4001&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06"> &lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Address range to use for services&lt;/span>
&lt;span style="color:#c4a000">KUBE_SERVICE_ADDRESSES&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;--service-cluster-ip-range=10.254.0.0/16&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06"> &lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Add your own&lt;/span>
&lt;span style="color:#c4a000">KUBE_API_ARGS&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Start the appropriate services on master:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> SERVICES in etcd kube-apiserver kube-controller-manager kube-scheduler&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">do&lt;/span>
systemctl restart &lt;span style="color:#000">$SERVICES&lt;/span>
systemctl &lt;span style="color:#204a87">enable&lt;/span> &lt;span style="color:#000">$SERVICES&lt;/span>
systemctl status &lt;span style="color:#000">$SERVICES&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">done&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>To add the other node, create the following &lt;code>node.json&lt;/code> file on the Kubernetes master node:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;apiVersion&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;v1&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;kind&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Node&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;metadata&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;photon-node&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;labels&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:{&lt;/span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;photon-node-label&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;spec&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;externalID&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;photon-node&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Create a node object internally in your Kubernetes cluster by running the following command:&lt;/p>
&lt;pre>&lt;code class="language-console" data-lang="console">$ kubectl create -f ./node.json
$ kubectl get nodes
NAME LABELS STATUS
photon-node name=photon-node-label Unknown
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Note&lt;/strong>: The above example only creates a representation for the node &lt;code>photon-node&lt;/code> internally. It does not provision the actual &lt;code>photon-node&lt;/code>. Also, it is assumed that &lt;code>photon-node&lt;/code> (as specified in &lt;code>name&lt;/code>) can be resolved and is reachable from the Kubernetes master node.&lt;/p></description></item><item><title>Docs: Configure the Kubernetes services on Node</title><link>/docs/user-guide/kubernetes-on-photon-os/running-kubernetes-on-photon-os/configure-kubernetes-on-node/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/user-guide/kubernetes-on-photon-os/running-kubernetes-on-photon-os/configure-kubernetes-on-node/</guid><description>
&lt;p>Perform the following steps to configure the kubelet on the node:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Edit /etc/kubernetes/kubelet to appear like this:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ini" data-lang="ini">&lt;span style="color:#8f5902;font-style:italic">###&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Kubernetes kubelet (node) config&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># The address for the info server to serve on (set to 0.0.0.0 or &amp;#34;&amp;#34; for all interfaces)&lt;/span>
&lt;span style="color:#c4a000">KUBELET_ADDRESS&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;--address=0.0.0.0&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06"> &lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># You may leave this blank to use the actual hostname&lt;/span>
&lt;span style="color:#c4a000">KUBELET_HOSTNAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;--hostname_override=photon-node&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06"> &lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># location of the api-server&lt;/span>
&lt;span style="color:#c4a000">KUBELET_API_SERVER&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;--kubeconfig=/etc/kubernetes/kubeconfig&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06"> &lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Add your own&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">#KUBELET_ARGS=&amp;#34;&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Start the appropriate services on the node (photon-node):&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> SERVICES in kube-proxy kubelet docker&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">do&lt;/span>
systemctl restart &lt;span style="color:#000">$SERVICES&lt;/span>
systemctl &lt;span style="color:#204a87">enable&lt;/span> &lt;span style="color:#000">$SERVICES&lt;/span>
systemctl status &lt;span style="color:#000">$SERVICES&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">done&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Check to make sure that the cluster can now see the photon-node on photon-master and that its status changes to &lt;em>Ready&lt;/em>.&lt;/p>
&lt;pre>&lt;code class="language-console" data-lang="console">kubectl get nodes
NAME LABELS STATUS
photon-node name=photon-node-label Ready
&lt;/code>&lt;/pre>&lt;p>If the node status is &lt;code>NotReady&lt;/code>, verify that the firewall rules are permissive for Kubernetes.&lt;/p>
&lt;ul>
&lt;li>Deletion of nodes: To delete &lt;em>photon-node&lt;/em> from your Kubernetes cluster, one should run the following on photon-master (please do not do it, it is just for information):&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">kubectl delete -f ./node.json
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="result">Result&lt;/h2>
&lt;p>You should have a functional cluster. You can now launch a test pod. For an introduction to working with Kubernetes, see &lt;a href="http://kubernetes.io/docs/home/">Kubernetes documentation&lt;/a>.&lt;/p></description></item></channel></rss>