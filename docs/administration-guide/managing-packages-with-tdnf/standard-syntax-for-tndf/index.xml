<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>â€“ Standard Syntax for tdnf Commands</title><link>/docs/administration-guide/managing-packages-with-tdnf/standard-syntax-for-tndf/</link><description>Recent content in Standard Syntax for tdnf Commands on</description><generator>Hugo -- gohugo.io</generator><atom:link href="/docs/administration-guide/managing-packages-with-tdnf/standard-syntax-for-tndf/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: tdnf Commands</title><link>/docs/administration-guide/managing-packages-with-tdnf/standard-syntax-for-tndf/commands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/administration-guide/managing-packages-with-tdnf/standard-syntax-for-tndf/commands/</guid><description>
&lt;p>&lt;strong>check&lt;/strong>: Checks for problems in installed and available packages for all enabled repositories. The command has no arguments. You can use &lt;code>--enablerepo&lt;/code> and &lt;code>--disablerepo&lt;/code> to control the repos used. Supported in Photon OS 2.0 (only).&lt;/p>
&lt;p>&lt;strong>check-local&lt;/strong>: This command resolves dependencies by using the local RPMs to help check RPMs for quality assurance before publishing them. To check RPMs with this command, you must create a local directory and place your RPMs in it. The command, which includes no options, takes the path to the local directory containing the RPMs as its argument. The command does not recursively parse directories. It checks the RPMs only in the directory that you specify. For example, after creating a directory named &lt;code>/tmp/myrpms&lt;/code> and placing your RPMs in it, you can run the following command to check them:&lt;/p>
&lt;pre>&lt;code>tdnf check-local /tmp/myrpms
Checking all packages from: /tmp/myrpms
Found 10 packages
Check completed without issues
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>check-update&lt;/strong>: This command checks for updates to packages. It takes no arguments. The &lt;code>tdnf list updates&lt;/code> command performs the same function. Here is an example of the &lt;code>check update&lt;/code> command:&lt;/p>
&lt;pre>&lt;code>tdnf check-update
rpm-devel.x86_64 4.11.2-8.ph1 photon
yum.noarch 3.4.3-3.ph1 photon
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>clean&lt;/strong>: This command cleans up temporary files, data, and metadata. It takes the argument &lt;code>all&lt;/code>. Example:&lt;/p>
&lt;pre>&lt;code>tdnf clean all
Cleaning repos: photon photon-extras photon-updates
Cleaning up everything
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>distro-sync&lt;/strong>: This command synchronizes the machine&amp;rsquo;s RPMs with the latest version of all the packages in the repository. The following is an abridged example:&lt;/p>
&lt;pre>&lt;code>tdnf distro-sync
Upgrading:
zookeeper x86_64 3.4.8-2.ph1 3.38 M
yum noarch 3.4.3-3.ph1 4.18 M
Total installed size: 113.01 M
Reinstalling:
zlib-devel x86_64 1.2.8-2.ph1 244.25 k
zlib x86_64 1.2.8-2.ph1 103.93 k
yum-metadata-parser x86_64 1.1.4-1.ph1 57.10 k
Total installed size: 1.75 G
Obsoleting:
tftp x86_64 5.2-3.ph1 32.99 k
Total installed size: 32.99 k
Is this ok [y/N]:
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>downgrade&lt;/strong>: This command downgrades the package that you specify as an argument to the next lower package version. The following is an example:&lt;/p>
&lt;pre>&lt;code>tdnf downgrade boost
Downgrading:
boost x86_64 1.56.0-2.ph1 8.20 M
Total installed size: 8.20 M
Is this ok [y/N]:y
Downloading:
boost 2591470 100%
Testing transaction
Running transaction
Complete!
&lt;/code>&lt;/pre>
&lt;p>To downgrade to a version lower than the next one, you must specify it by name, epoch, version, and release, all properly hyphenated. The following is an example:&lt;/p>
&lt;pre>&lt;code>tdnf downgrade boost-1.56.0-2.ph1
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>erase&lt;/strong>: This command removes the package that you specify as an argument.&lt;/p>
&lt;p>To remove a package, run the following command:&lt;/p>
&lt;pre>&lt;code>tdnf erase pkgname
&lt;/code>&lt;/pre>
&lt;p>The following is an example:&lt;/p>
&lt;pre>&lt;code>tdnf erase vim
Removing:
vim x86_64 7.4-4.ph1 1.94 M
Total installed size: 1.94 M
Is this ok [y/N]:
&lt;/code>&lt;/pre>
&lt;p>You can also erase multiple packages:&lt;/p>
&lt;pre>&lt;code>tdnf erase docker cloud-init
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>info&lt;/strong>: This command displays information about packages. It can take the name of a package. Or it can take one of the following arguments: all, available, installed, extras, obsoletes, recent, upgrades. The following are examples:&lt;/p>
&lt;pre>&lt;code>tdnf info ruby
tdnf info obsoletes
tdnf info upgrades
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>install&lt;/strong>: This command takes the name of a package as its argument. It then installs the package and its dependencies.&lt;/p>
&lt;p>To install a package, run the following command:&lt;/p>
&lt;pre>&lt;code>tdnf install pkgname
&lt;/code>&lt;/pre>
&lt;p>The following are examples:&lt;/p>
&lt;pre>&lt;code>tdnf install kubernetes
&lt;/code>&lt;/pre>
&lt;p>You can also install multiple packages:&lt;/p>
&lt;pre>&lt;code>tdnf install python-curses lsof audit gettext chkconfig ntsysv bindutils
wget gawk irqbalance lvm2 cifs-utils c-ares distrib-compat
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>list&lt;/strong>: This command lists the packages of the package that you specify as the argument. The command can take one of the following arguments: all, available, installed, extras, obsoletes, recent, upgrades.&lt;/p>
&lt;pre>&lt;code>tdnf list updates
&lt;/code>&lt;/pre>
&lt;p>The list of packages might be long. To more easily view it, you can concatenate it into a text file, and then open the text file in a text editor:&lt;/p>
&lt;pre>&lt;code>tdnf list all &amp;gt; pkgs.txt
vi pkgs.txt
&lt;/code>&lt;/pre>
&lt;p>To list enabled repositories, run the following command:&lt;/p>
&lt;pre>&lt;code>tdnf repolist
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>makecache&lt;/strong>: This command updates the cached binary metadata for all known repositories. The following is an example:&lt;/p>
&lt;pre>&lt;code>tdnf makecache
Refreshing metadata for: 'VMware Lightwave 1.0(x86_64)'
Refreshing metadata for: 'VMware Photon Linux 1.0(x86_64)Updates'
Refreshing metadata for: 'VMware Photon Extras 1.0(x86_64)'
Refreshing metadata for: 'VMware Photon Linux 1.0(x86_64)'
Metadata cache created.
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>provides&lt;/strong>: This command finds the packages that provide the package that you supply as an argument. The following is an example:&lt;/p>
&lt;pre>&lt;code>tdnf provides docker
docker-1.11.0-1.ph1.x86_64 : Docker
Repo : photon
docker-1.11.0-1.ph1.x86_64 : Docker
Repo : @System
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>reinstall&lt;/strong>: This command reinstalls the packages that you specify. If some packages are unavailable or not installed, the command fails. The following is an example:&lt;/p>
&lt;pre>&lt;code>tdnf reinstall docker kubernetes
Reinstalling:
kubernetes x86_64 1.1.8-1.ph1 152.95 M
docker x86_64 1.11.0-1.ph1 57.20 M
Total installed size: 210.15 M
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>remove&lt;/strong>: This command removes a package. When removing a package, tdnf by default also removes dependencies that are no longer used if they were was installed by tdnf as a dependency without being explicitly requested by a user. You can modify the dependency removal by changing the &lt;code>clean_requirements_on_remove&lt;/code> option in /etc/tdnf/tdnf.conf to &lt;code>false&lt;/code>.&lt;/p>
&lt;pre>&lt;code>tdnf remove packagename
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>search&lt;/strong>: This command searches for the attributes of packages. The argument can be the names of packages. The following is an example:&lt;/p>
&lt;pre>&lt;code>tdnf search docker kubernetes
docker : Docker
docker : Docker
docker-debuginfo : Debug information for package docker
docker : Docker
kubernetes : Kubernetes cluster management
kubernetes : Kubernetes cluster management
kubernetes-debuginfo : Debug information for package kubernetes
kubernetes : Kubernetes cluster management
&lt;/code>&lt;/pre>
&lt;p>The argument of the search command can also be a keyword or a combination of keywords and packages:&lt;/p>
&lt;pre>&lt;code>tdnf search terminal bash
rubygem-terminal-table : Simple, feature rich ascii table generation library
ncurses : Libraries for terminal handling of character screens
mingetty : A minimal getty program for virtual terminals
ncurses : Libraries for terminal handling of character screens
ncurses : Libraries for terminal handling of character screens
bash : Bourne-Again SHell
bash-lang : Additional language files for bash
bash-lang : Additional language files for bash
bash : Bourne-Again SHell
bash-debuginfo : Debug information for package bash
bash : Bourne-Again SHell
bash-lang : Additional language files for bash
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>updateinfo&lt;/strong>: This command displays security advisories about packages. The following is an example:&lt;/p>
&lt;pre>&lt;code>tdnf updateinfo info
Name : unzip-6.0-15.ph3.x86_64.rpm
Update ID : patch:PHSA-2020-3.0-0083
Type : Security
Updated : Fri Apr 24 01:15:03 2020
Needs Reboot: 0
Description : Security fixes for {'CVE-2018-1000035'}
Name : runc-1.0.0.rc9-3.ph3.x86_64.rpm
Update ID : patch:PHSA-2020-3.0-0102
Type : Security
Updated : Tue Jun 9 06:01:28 2020
Needs Reboot: 0
Description : Security fixes for {'CVE-2019-19921'}
Name : ruby-2.5.8-2.ph3.x86_64.rpm
Update ID : patch:PHSA-2020-3.0-0163
Type : Security
Updated : Thu Nov 19 17:21:29 2020
Needs Reboot: 0
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>upgrade&lt;/strong>: This command upgrades the package or packages that you specify to an available higher version that tdnf can resolve. If the package is already the latest version, the command returns &lt;code>Nothing to do&lt;/code>. The following is an example:&lt;/p>
&lt;pre>&lt;code>tdnf upgrade boost
Upgrading:
boost x86_64 1.60.0-1.ph1 8.11 M
Total installed size: 8.11 M
Is this ok [y/N]:y
Downloading:
boost 2785950 100%
Testing transaction
Running transaction
Complete!
&lt;/code>&lt;/pre>
&lt;p>You can also run the &lt;code>upgrade&lt;/code> command with the &lt;code>refresh&lt;/code> option to update the cached metadata with the latest information from the repositories. The following example refreshes the metadata and then checks for a new version of tdnf but does not find one, so tdnf takes no action:&lt;/p>
&lt;pre>&lt;code>tdnf upgrade tdnf --refresh
Refreshing metadata for: 'VMware Lightwave 1.0(x86_64)'
Refreshing metadata for: 'VMware Photon Linux 1.0(x86_64)Updates'
Refreshing metadata for: 'VMware Photon Extras 1.0(x86_64)'
Refreshing metadata for: 'VMware Photon Linux 1.0(x86_64)'
Nothing to do.
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>upgrade-to&lt;/strong>: This command upgrades to the version of the package that you specify. The following is an example:&lt;/p>
&lt;pre>&lt;code>tdnf upgrade-to ruby2.3
&lt;/code>&lt;/pre>
&lt;p>The commands and options of tdnf are a subset of those of dnf. For more help with &lt;code>tdnf&lt;/code> commands, see the &lt;a href="https://media.readthedocs.org/pdf/dnf/latest/dnf.pdf">DNF documentation&lt;/a>.&lt;/p></description></item><item><title>Docs: tdnf Command Options</title><link>/docs/administration-guide/managing-packages-with-tdnf/standard-syntax-for-tndf/options-for-commands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/administration-guide/managing-packages-with-tdnf/standard-syntax-for-tndf/options-for-commands/</guid><description>
&lt;p>You can add the following options to &lt;code>tdnf&lt;/code> commands. If the option to override a configuration is unavailable in a command, you can add it to the &lt;code>/etc/tdnf/tdnf.conf&lt;/code> configuration file.&lt;/p>
&lt;pre>&lt;code>OPTION DESCRIPTION
--allowerasing Allow erasing of installed packages to resolve dependencies
--assumeno Answer no for all questions
--best Try the best available package versions in transactions
--debugsolver Dump data aiding in dependency solver debugging info.
--disablerepo=&amp;lt;repoid&amp;gt; Disable specific repositories by an id or a glob.
--enablerepo=&amp;lt;repoid&amp;gt; Enable specific repositories
-h, --help Display help
--refresh Set metadata as expired before running command
--nogpgcheck Skip gpg check on packages
--rpmverbosity=&amp;lt;debug level name&amp;gt;
Debug level for rpm
--version Print version and exit
-y, --assumeyes Answer yes to all questions
-q, --quiet Quiet operation
--downloadonly Enables you to download the packages and dependencies that are
not installed to the cache.
--downloaddir=dir Downloads the packages to the specified directory
&lt;/code>&lt;/pre>
&lt;p>The following is an example that adds the short form of the &lt;code>assumeyes&lt;/code> option to the install command:&lt;/p>
&lt;pre>&lt;code>tdnf -y install gcc
Upgrading:
gcc x86_64 5.3.0-1.ph1 91.35 M
&lt;/code>&lt;/pre>
&lt;p>The following is an example for the &lt;code>downloadonly&lt;/code> option with the install command:&lt;/p>
&lt;pre>&lt;code>tdnf install --downloadonly less
Installing:
lessx86_64551-2.ph4 photon234.35k 239976
Total installed size: 234.35k 239976
tdnf will only download packages needed for the transaction
Is this ok [y/N]: y
Downloading:
less117650 100%
Complete!
Packages have been downloaded to cache.
&lt;/code>&lt;/pre>
&lt;p>The following is an example for the &lt;code>downloaddir=dir&lt;/code> option with the install command:&lt;/p>
&lt;pre>&lt;code>tdnf install --downloadonly --downloaddir=/tmp less
Installing:
lessx86_64551-2.ph4 photon234.35k 239976
Total installed size: 234.35k 239976
tdnf will only download packages needed for the transaction
Is this ok [y/N]: y
Downloading:
less117650 100%
Complete!
Packages have been downloaded to /tmp.
root [ /build/build ]# ls -l /tmp/less-551-2.ph4.x86_64.rpm
-rw-r--r-- 1 root root 117650 Feb 22 18:43 /tmp/less-551-2.ph4.x86_64.rpm
&lt;/code>&lt;/pre></description></item></channel></rss>