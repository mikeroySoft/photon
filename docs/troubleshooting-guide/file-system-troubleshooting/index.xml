<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>â€“ File System Troubleshooting</title><link>/docs/troubleshooting-guide/file-system-troubleshooting/</link><description>Recent content in File System Troubleshooting on</description><generator>Hugo -- gohugo.io</generator><atom:link href="/docs/troubleshooting-guide/file-system-troubleshooting/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Checking Disk Space</title><link>/docs/troubleshooting-guide/file-system-troubleshooting/checking-disk-space/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/troubleshooting-guide/file-system-troubleshooting/checking-disk-space/</guid><description>
&lt;p>One of the first simple steps to take while troubleshooting is to check how much disk space is available by running the &lt;code>df&lt;/code> command:&lt;/p>
&lt;pre>&lt;code>df -h&lt;/code>&lt;/pre></description></item><item><title>Docs: Adding a Disk and Partitioning It</title><link>/docs/troubleshooting-guide/file-system-troubleshooting/adding-a-disk-and-partitioning-it/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/troubleshooting-guide/file-system-troubleshooting/adding-a-disk-and-partitioning-it/</guid><description>
&lt;p>If the &lt;code>df&lt;/code> command shows that the file system is indeed nearing capacity, you can add a new disk on the fly and partition it to increase capacity.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Add a new disk.&lt;/p>
&lt;p>For example, you can add a new disk to a virtual machine by using the VMware vSphere Client. After adding a new disk, check for the new disk by using &lt;code>fdisk&lt;/code>. In the following example, the new disk is named &lt;code>/dev/sdb&lt;/code>:&lt;/p>
&lt;pre>&lt;code> fdisk -l
Device Start End Sectors Size Type
/dev/sda1 2048 16771071 16769024 8G Linux filesystem
/dev/sda2 16771072 16777182 6111 3M BIOS boot
Disk /dev/sdb: 1 GiB, 1073741824 bytes, 2097152 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Partition it with the &lt;code>parted&lt;/code> wizard.&lt;/p>
&lt;p>The command to partition the disk on Photon OS is as follows:&lt;/p>
&lt;p>parted /dev/sdb&lt;/p>
&lt;p>Use the &lt;code>parted&lt;/code> wizard to create it as follows:&lt;/p>
&lt;p>mklabel gpt
mkpart ext3 1 1024&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create a file system on the partition:&lt;/p>
&lt;pre>&lt;code>mkfs -t ext3 /dev/sdb1
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Make a directory where you will mount the new file system:&lt;/p>
&lt;pre>&lt;code>mkdir /newdata
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Open &lt;code>/etc/fstab&lt;/code> and add the new file system with the options that you require:&lt;/p>
&lt;pre>&lt;code> #system mnt-pt type options dump fsck
/dev/sda1 / ext4 defaults,barrier,noatime,noacl,data=ord$
/dev/cdrom /mnt/cdrom iso9660 ro,noauto 0 0
/dev/sdb1 /newdata ext3 defaults 0 0
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>Mount it using the following command:&lt;/p>
&lt;pre>&lt;code>`mount /newdata`
&lt;/code>&lt;/pre>
&lt;p>Verify the results:&lt;/p>
&lt;pre>&lt;code>&lt;/code>&lt;/pre>&lt;/li>
&lt;/ol>
&lt;p>df -h
Filesystem Size Used Avail Use% Mounted on
/dev/root 7.8G 4.4G 3.1G 59% /
devtmpfs 172M 0 172M 0% /dev
tmpfs 173M 0 173M 0% /dev/shm
tmpfs 173M 664K 172M 1% /run
tmpfs 173M 0 173M 0% /sys/fs/cgroup
tmpfs 173M 36K 173M 1% /tmp
tmpfs 35M 0 35M 0% /run/user/0
/dev/sdb1 945M 1.3M 895M 1% /newdata&lt;/p>
&lt;pre>&lt;code>
&lt;/code>&lt;/pre></description></item><item><title>Docs: Expanding Disk Partition</title><link>/docs/troubleshooting-guide/file-system-troubleshooting/expanding-disk-partition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/troubleshooting-guide/file-system-troubleshooting/expanding-disk-partition/</guid><description>
&lt;p>If you require more space, you can expand the last partition of your disk after resizing the disk.&lt;/p>
&lt;p>The commands in this section assume &lt;code>sda&lt;/code> as disk device.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>After the disk is resized in the virtual machine, use the following command to enable the system to recognize the new disk ending boundary without rebooting:&lt;/p>
&lt;pre>&lt;code>echo 1 &amp;gt; /sys/class/block/sda/device/rescan
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>Install the &lt;code>parted&lt;/code> package to resize the disk partition by running the following command to install it:&lt;/p>
&lt;pre>&lt;code> `tdnf install parted`.
# parted /dev/sda
GNU Parted 3.2
Using /dev/sda
Welcome to GNU Parted! Type 'help' to view a list of commands.
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>List all partitions available to fix the GPT and check the last partition number:&lt;/p>
&lt;pre>&lt;code>
(parted) print
Warning: Not all of the space available to /dev/sda appears to be used, you can
fix the GPT to use all of the space (an extra 4194304 blocks) or continue with
the current setting?
Fix/Ignore?
Press `f` to fix the GPT layout.
Model: VMware Virtual disk (scsi)
Disk /dev/sda: 34.4GB
Sector size (logical/physical): 512B/512B
Partition Table: gpt
Disk Flags:
Number Start End Size File system Name Flags
1 1049kB 3146kB 2097kB bios_grub
2 3146kB 8590MB 8587MB ext4
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>
In this case we have the partition `2` as last, then we extend the partition to 100% of the remaining size:
(parted) resizepart 2 100%
1. Expand the filesystem to the new size:
```
resize2fs /dev/sda2
resize2fs 1.42.13 (17-May-2015)
Filesystem at /dev/sda2 is mounted on /; on-line resizing required
old_desc_blocks = 1, new_desc_blocks = 2
The filesystem on /dev/sda2 is now 8387835 (4k) blocks long.
```
The new space is already available in the system:
df -h
Filesystem Size Used Avail Use% Mounted on
/dev/root 32G 412M 30G 2% /
devtmpfs 1001M 0 1001M 0% /dev
tmpfs 1003M 0 1003M 0% /dev/shm
tmpfs 1003M 252K 1003M 1% /run
tmpfs 1003M 0 1003M 0% /sys/fs/cgroup
tmpfs 1003M 0 1003M 0% /tmp
tmpfs 201M 0 201M 0% /run/user/0&lt;/code>&lt;/pre></description></item><item><title>Docs: List Disk Partitions with `fdisk`</title><link>/docs/troubleshooting-guide/file-system-troubleshooting/fdisk/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/troubleshooting-guide/file-system-troubleshooting/fdisk/</guid><description>
&lt;p>The &lt;code>fdisk&lt;/code> command manipulates the disk partition table. You can, for example, use &lt;code>fdisk&lt;/code> to list the disk partitions so that you can identify the root Linux file system.&lt;/p>
&lt;p>The following example shows &lt;code>/dev/sda1&lt;/code> to be the root Linux partition:&lt;/p>
&lt;pre>&lt;code>fdisk -l
Disk /dev/ram0: 4 MiB, 4194304 bytes, 8192 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 4096 bytes
I/O size (minimum/optimal): 4096 bytes / 4096 bytes
...
Disk /dev/sda: 8 GiB, 8589934592 bytes, 16777216 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: gpt
Disk identifier: 3CFA568B-2C89-4290-8B52-548732A3972D
Device Start End Sectors Size Type
/dev/sda1 2048 16771071 16769024 8G Linux filesystem
/dev/sda2 16771072 16777182 6111 3M BIOS boot
&lt;/code>&lt;/pre></description></item><item><title>Docs: File System Consistency Check Tool</title><link>/docs/troubleshooting-guide/file-system-troubleshooting/fsck/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/troubleshooting-guide/file-system-troubleshooting/fsck/</guid><description>
&lt;p>You can manually check the file system by using the file system consistency check tool, &lt;code>fsck&lt;/code>, after you unmount the file system.&lt;/p>
&lt;p>The Photon OS file system includes btrfs and ext4. The default root file system is ext4, which you can see by looking at the file system configuration file, &lt;code>/etc/fstab&lt;/code>:&lt;/p>
&lt;pre>&lt;code>```
cat /etc/fstab
#system mnt-pt type options dump fsck
/dev/sda1 / ext4 defaults,barrier,noatime,noacl,data=ordered 1 1
/dev/cdrom /mnt/cdrom iso9660 ro,noauto 0 0
```
&lt;/code>&lt;/pre>
&lt;p>The &lt;code>1&lt;/code> in the fifth column, under &lt;code>fsck&lt;/code>, indicates that fsck checks the file system when the system boots.&lt;/p>
&lt;p>You can also perform a read-only check without unmounting it:&lt;/p>
&lt;pre>&lt;code>```
fsck -nf /dev/sda1
fsck from util-linux 2.27.1
e2fsck 1.42.13 (17-May-2015)
Warning! /dev/sda1 is mounted.
Warning: skipping journal recovery because doing a read-only filesystem check.
Pass 1: Checking inodes, blocks, and sizes
Pass 2: Checking directory structure
Pass 3: Checking directory connectivity
Pass 4: Checking reference counts
Pass 5: Checking group summary information
Free blocks count wrong (1439651, counted=1423942).
Fix? no
Free inodes count wrong (428404, counted=428397).
Fix? no
/dev/sda1: 95884/524288 files (0.3% non-contiguous), 656477/2096128 blocks
```
&lt;/code>&lt;/pre>
&lt;p>The inodes count might be wrong because the file system is mounted and in use.&lt;/p>
&lt;p>To fix errors, you must first unmount the file system and then run fsck again:&lt;/p>
&lt;pre>&lt;code>```
umount /dev/sda1
umount: /: target is busy
```
&lt;/code>&lt;/pre>
&lt;p>You can find information about processes that use the device by using &lt;code>lsof&lt;/code> or &lt;code>fuser&lt;/code>.&lt;/p>
&lt;pre>&lt;code>```
lsof | grep ^jbd2/sd
jbd2/sda1 99 root cwd DIR 8,1 4096 2 /
jbd2/sda1 99 root rtd DIR 8,1 4096 2 /
jbd2/sda1 99 root txt unknown /proc/99/exe
```
&lt;/code>&lt;/pre>
&lt;p>The above example indicates that file system is in use.&lt;/p></description></item><item><title>Docs: Fixing File System Errors When fsck Fails</title><link>/docs/troubleshooting-guide/file-system-troubleshooting/fixing-file-system-errors-when-fsck-fails/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/troubleshooting-guide/file-system-troubleshooting/fixing-file-system-errors-when-fsck-fails/</guid><description>
&lt;p>Sometimes when &lt;code>fsck&lt;/code> runs during startup, it encounters an error that prevents the system from fully booting until you fix the issue by running &lt;code>fsck&lt;/code> manually. This error might occur when Photon OS is the operating system for a VM running an appliance.&lt;/p>
&lt;p>If &lt;code>fsck&lt;/code> fails when the computer boots and an error message says to run fsck manually, you can troubleshoot by restarting the VM, altering the GRUB edit menu to enter emergency mode before Photon OS fully boots, and running &lt;code>fsck&lt;/code>.&lt;/p>
&lt;p>Perform the following steps:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Take a snapshot of the virtual machine.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Restart the virtual machine running Photon OS.&lt;/p>
&lt;p>When the Photon OS splash screen appears as it restarts, type the letter &lt;code>e&lt;/code> quickly to go to the &lt;code>GNU GRUB&lt;/code> edit menu.&lt;/p>
&lt;p>&lt;strong>Note&lt;/strong>: You must type &lt;code>e&lt;/code> quickly as Photon OS reboots quickly. Also, in VMware vSphere or VMware Workstation Pro, you might have to give the console focus by clicking in its window before it will register input from the keyboard.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>In the &lt;code>GNU GRUB&lt;/code> edit menu, go to the end of the line that starts with &lt;code>linux&lt;/code>, add a space, and then add the following code exactly as it appears below:&lt;/p>
&lt;p>&lt;code>systemd.unit=emergency.target&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Type &lt;code>F10&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>In the bash shell, run one of the following commands to fix the file system errors, depending on whether &lt;code>sda1&lt;/code> or &lt;code>sda2&lt;/code> represents the root file system:&lt;/p>
&lt;p>&lt;code>e2fsck -y /dev/sda1&lt;/code>&lt;/p>
&lt;p>or&lt;/p>
&lt;p>&lt;code>e2fsck -y /dev/sda2&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Restart the virtual machine.&lt;/p>
&lt;/li>
&lt;/ol></description></item></channel></rss>