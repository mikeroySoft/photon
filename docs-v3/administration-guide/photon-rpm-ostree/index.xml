<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>â€“ Photon RPM OSTree: a simple guide</title><link>/docs-v3/administration-guide/photon-rpm-ostree/</link><description>Recent content in Photon RPM OSTree: a simple guide on</description><generator>Hugo -- gohugo.io</generator><atom:link href="/docs-v3/administration-guide/photon-rpm-ostree/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs-V3: Introduction</title><link>/docs-v3/administration-guide/photon-rpm-ostree/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs-v3/administration-guide/photon-rpm-ostree/introduction/</guid><description>
&lt;h2 id="rpm-ostree-overview">RPM-OSTree Overview&lt;/h2>
&lt;p>OSTree is a tool to manage bootable, immutable, versioned filesystem trees. Unlike traditional package managers like rpm or dpkg that know how to install, uninstall, configure packages, OSTree has no knowledge of the relationship between files. But when you add rpm capabilities on top of OSTree, it becomes RPM-OSTree, meaning a filetree replication system that is also package-aware.&lt;/p>
&lt;p>The idea behind it is to use a client/server architecture to keep your Linux installed machines (physical or VM) in sync with the latest bits, in a predictable and reliable manner. To achieve that, OSTree uses a git-like repository that records the changes to any file and replicate them to any subscriber.&lt;/p>
&lt;p>A system administrator or an image builder developer takes a base Linux image, prepares the packages and other configuration on a server box, executes a command to compose a filetree that the host machines will download and then incrementally upgrade whenever a new change has been committed.
You may read more about OSTree &lt;a href="https://ostree.readthedocs.org/en/latest/">here&lt;/a>.&lt;/p>
&lt;h2 id="why-use-rpm-ostree-in-photon">Why use RPM-OSTree in Photon?&lt;/h2>
&lt;p>There are several important benefits:&lt;/p>
&lt;ul>
&lt;li>Reliable, efficient: The filetree replication is simple, reliable and efficient. It will only transfer deltas over the network. If you have deployed two almost identical bootable images on same box (differing just by several files), it will not take twice the space. The new tree will have a set of hardlinks to the old tree and only the different files will have a separate copy stored to disk.&lt;/li>
&lt;li>Atomic: the filetree replication is atomic. At the end of a deployment, you are either booting from one deployment, or the other. There is no &amp;ldquo;partial deployed bootable image&amp;rdquo;. If anything bad happens during replication or deployment- power loss, network failure, your machine boots from the old image. There is even a tool option to cleanup old deployed (successfully or not) image.&lt;/li>
&lt;li>Manageable: You are provided simple tools to figure out exactly what packages have been installed, to compare files, configuration and package changes between versions.&lt;/li>
&lt;li>Predictable, repeatable: A big headache for a system administrator is to maintain a farm of computers with different packages, files and configuration installed in different order, that will result in exponential set of test cases. With RPM-OStree, you get identical, predictable installed systems.&lt;/li>
&lt;/ul>
&lt;p>As drawbacks, I would mention:&lt;/p>
&lt;ul>
&lt;li>Some applications configured by user on host may have compatibility issues if they save configuration or download into read only directories like /usr.&lt;/li>
&lt;li>People not used with &amp;ldquo;read only&amp;rdquo; file systems will be disappointed that they could no longer use RPM, yum, tdnf to install whatever they want. Think of this as an &amp;ldquo;enterprise policy&amp;rdquo;. They may circumvent this by customizing the target directory to a writable directory like /var or using rpm to install packages and record them using a new RPM repository in a writable place.&lt;/li>
&lt;li>Administrators need to be aware about the directories re-mapping specific to OSTree and plan accordingly.&lt;/li>
&lt;/ul>
&lt;h2 id="photon-with-rpm-ostree-installation-profiles">Photon with RPM-OSTree installation profiles&lt;/h2>
&lt;p>Photon takes advantage of RPM-OSTree and offers several installation choices:&lt;/p>
&lt;ul>
&lt;li>Photon RPM-OSTree server - used to compose customized Photon OS installations and to prepare updates. I will call it for short &amp;lsquo;server&amp;rsquo;.&lt;/li>
&lt;li>Photon RPM-OSTree host connected to a default online server repository via http or https, maintained by VMware Photon OS team, where future updates will be published. This will create a minimal installation profile, but with the option to self-upgrade. I will call it for short &amp;lsquo;default host&amp;rsquo;.&lt;/li>
&lt;li>Photon RPM-OSTree host connected to a custom server repository. It requires a Photon RPM-OSTree Server installed in advance. I will call it for short &amp;lsquo;custom host&amp;rsquo;.&lt;/li>
&lt;/ul>
&lt;h2 id="terminology">Terminology&lt;/h2>
&lt;p>In this section, the term &lt;em>OSTree&lt;/em> refers to the general use of this technology, the format of the repository or replication protocol.&lt;/p>
&lt;p>The term &lt;em>RPM-OSTree&lt;/em> emphasizes the layer that adds RedHat Package Manager compatibility on both ends - at server and at host. However, since Photon OS is an RPM-based Linux, there are places in the documentation and even in the installer menus where &lt;em>OSTree&lt;/em> may be used instead of &lt;em>RPM-OSTree&lt;/em> when the distinction is not obvious or does not matter in that context.&lt;/p>
&lt;p>When &lt;code>ostree&lt;/code> and &lt;code>rpm-ostree&lt;/code> are encountered, they refer to the usage of the specific Unix commands.&lt;/p>
&lt;p>Finally, &lt;em>Photon RPM-OSTree&lt;/em> is the application or implementation of the RPM-OStree system into Photon OS, materialized into two options: Photon Server and Photon Host (or client). &lt;em>Server&lt;/em> or &lt;em>Host&lt;/em> may be used with or without the &lt;em>Photon&lt;/em> and/or &lt;em>RPM-OStree&lt;/em> qualifier, but it means the same thing.&lt;/p>
&lt;h2 id="sample-code">Sample code&lt;/h2>
&lt;p>Codes samples used throughout the book are small commands that can be typed at shell command prompt and do not require downloading additional files. As an alternative, one can remote connect via ssh, so cut &amp;amp; paste sample code from outside sources or copy files via scp will work. See the Photon Administration guide to learn &lt;a href="../../../troubleshooting-guide/solutions-to-common-problems/permitting-root-login-with-ssh/">how to enable ssh&lt;/a>.
The samples assume that the following VMs have been installed - see the steps in the next chapters:&lt;/p>
&lt;ul>
&lt;li>A default host VM named &lt;strong>photon-host-def&lt;/strong>.&lt;/li>
&lt;li>Two server VMs named &lt;strong>photon-srv1&lt;/strong> and &lt;strong>photon-srv2&lt;/strong>.&lt;/li>
&lt;li>Two custom host VMs named &lt;strong>photon-host-cus1&lt;/strong> and &lt;strong>photon-host-cus2&lt;/strong>, connected each to the corresponding server during install.&lt;/li>
&lt;/ul>
&lt;h2 id="how-to-read-this-book">How to read this book&lt;/h2>
&lt;p>The RPM OSTree guide is structured to be used both as a sequential read and as a reference documentation.&lt;br>
If you are just interested in deploying a host system and keeping it up to date, then read &lt;a href="../installing-a-host-against-default-server-repository/">Installing a Photon RPM-OSTree host against default server repository&lt;/a> and &lt;a href="../host-updating-operations/">Host updating operations&lt;/a>.&lt;/p>
&lt;p>If you want to install your own server and experiment with customizing packages for your Photon hosts, then read [Installing a Photon RPM-OSTree server](../creating-a-rpm-ostree-
server/) onwards. There are references to the concepts discussed throughout the book, if you need to understand them better.&lt;br>
However, if you want to read page by page, information is presented from simple to complex, although as with any technical book, we occasionally run into the chicken and egg problem - forward references to concepts that have yet to be explained later. In other cases, concepts are introduced and presented in great detail that may be seem hard to follow at first, but I promise they will make sense in the later pages when you get to use them.&lt;/p>
&lt;h2 id="rpm-ostree-in-photon-os-30">RPM OSTree in Photon OS 3.0&lt;/h2>
&lt;p>This book is relevant to RPM OSTree in Photon OS 3.0.&lt;/p>
&lt;p>Version 3.0 supports the following features:&lt;/p>
&lt;ul>
&lt;li>Upgrade&lt;/li>
&lt;li>Rollback&lt;/li>
&lt;li>Remote, compose, and rebase server&lt;/li>
&lt;li>Installation and uninstallation of packages with URL&lt;/li>
&lt;li>Installation and uninstallation of packages from default repos&lt;/li>
&lt;li>Automatic updates&lt;/li>
&lt;/ul></description></item><item><title>Docs-V3: Installing a host against default server repository</title><link>/docs-v3/administration-guide/photon-rpm-ostree/installing-a-host-against-default-server-repository/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs-v3/administration-guide/photon-rpm-ostree/installing-a-host-against-default-server-repository/</guid><description>
&lt;p>RPM-OSTree Host default server repo installation option in Photon 3.0 will setup a profile similar to Photon Minimal, with the added benefit of being able to self-upgrade.&lt;/p>
&lt;h2 id="who-is-this-for">Who is this for?&lt;/h2>
&lt;p>The RPM-OSTree &amp;lsquo;default host&amp;rsquo; is the easiest way to deploy a Photon RPM-OSTree host from ISO/cdrom, without the need to deploy and maintain an RPM-OSTree server. It is targeted at the user who relies on VMware Photon OS team to keep his or her system up-to-date, configured to get its updates from the official Photon 3.0 OSTree repository.&lt;/p>
&lt;p>This is also the fastest way to install a host, as we&amp;rsquo;ve included in the ISO/cdrom an identical copy of the Photon 3.0 &amp;ldquo;starter&amp;rdquo; RPM-OSTree repository that is published online by VMware Photon OS team. So rather than pulling from the online repository, the installer pulls the repo from cdrom, which saves bandwidth and also reduces to zero the chances of failing due to a networking problem. After successful installation, any updates are going to be pulled from the official online repository, when Photon OS team will make them available.&lt;/p>
&lt;p>&lt;strong>Note&lt;/strong>: It is also possible to install an RPM-OSTree host against the official online repo via PXE boot, without the benefit of fast, local pull from cdrom. This will be covered in the PXE boot/kickstart chapter, as it requires additional configuration.&lt;/p>
&lt;h2 id="installing-the-iso">Installing the ISO&lt;/h2>
&lt;p>User will first download &lt;a href="https://github.com/vmware/photon/wiki/Downloading-Photon-OS">Photon OS ISO file&lt;/a> that contains the installer, which is able to deploy any of the supported Photon installation profiles.&lt;/p>
&lt;p>There are some steps common to all Photon installation profiles, starting with adding a VM in VMware Fusion, Workstation or ESXi, selecting the OS family, then customizing for disk size, CPU, memory size, network interface etc. (or leaving the defaults) and selecting the ISO image as cdrom. The installer will launch, that will go through disk partitioning and accepting the license agreement screens, followed by selecting an installation profile.
These steps are described at the page linked below, so I won&amp;rsquo;t repeat them, just that instead of setting up a Photon Minimal profile, we will install a Photon OSTree host:&lt;/p>
&lt;p>&lt;a href="../../../installation-guide/run-photon-on-fusion/">Running Project Photon on Fusion&lt;/a>.&lt;/p>
&lt;p>Select the &lt;strong>Photon OSTree Host&lt;/strong> option.&lt;/p>
&lt;p>&lt;img src="../../../images/rpmostree-install-options.png" alt="PhotonChooseHost">&lt;/p>
&lt;p>Continue with setting up a host name like &lt;strong>photon1-def&lt;/strong> and a root password, re-confirm.
Then, select &amp;ldquo;Default OSTree Server&amp;rdquo; and continue.&lt;/p>
&lt;p>&lt;img src="../../../images/rpmostree-default.png" alt="PhotonChooseHostDefault">&lt;/p>
&lt;p>&lt;img src="../../../images/photon-os-finish.png" alt="PhotonHostDefaultFinish">&lt;/p>
&lt;p>When installation is over, the VM will reboot and will show in grub VMWare Photon/Linux 3.0_minimal (ostree), which will reassure that it&amp;rsquo;s booting from an OSTree image!&lt;/p>
&lt;p>&lt;img src="../../../images/rpmostree-grub.png" alt="PhotonHostFirstRebootGrub">&lt;/p>
&lt;p>Boot, login and you are ready to use it.&lt;/p>
&lt;p>To upgrade your host, see &lt;a href="../host-updating-operations/">Host updating operations&lt;/a>.&lt;/p></description></item><item><title>Docs-V3: Concepts in Action</title><link>/docs-v3/administration-guide/photon-rpm-ostree/concepts-in-action/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs-v3/administration-guide/photon-rpm-ostree/concepts-in-action/</guid><description>
&lt;p>Now that we have a fresh installed host (either as [[default|Photon-RPM-OSTree:-2-Installing-a-host-against-default-server-repository]] or [[custom|Photon-RPM-OSTree:-7-Installing-a-host-against-a-custom-server-repository]]), I can explain better the OStree concepts and see them in action.&lt;/p>
&lt;h2 id="querying-the-deployed-filetrees">Querying the deployed filetrees&lt;/h2>
&lt;p>The first thing to do is to run a command that tells us what is installed on the machine and when. Since it&amp;rsquo;s a fresh install from the CD, there is only one bootable filetree image deployed.&lt;/p>
&lt;pre>&lt;code>root@photon-host [ ~ ]# rpm-ostree status
* ostree://photon:photon/3.0/x86_64/minimal
Version: 3.0_minimal (2019-08-29T11:20:19Z)
Commit: a31a843985e314a9e70bcf09afe8d59f7351817d9fb743c2b6dab84f20833650
&lt;/code>&lt;/pre>&lt;h2 id="bootable-filetree-version">Bootable filetree version&lt;/h2>
&lt;p>&lt;strong>3.0_minimal&lt;/strong> is not the Linux Photon OS release version, nor daily build, but rather a human readable, self-incrementing version associated with every commit that brings file/package updates. Think of this as version 0. The following versions are going to be 3.0_minimal.1, 3.0_minimal.2, 3.0_minimal.3 and so on.&lt;/p>
&lt;h2 id="commit-id">Commit ID&lt;/h2>
&lt;p>The ID listed is actually the first 5 bytes (10 hex digits) of the commit hash. If you want to see the verbose mode, use the &lt;code>-v&lt;/code> option.&lt;/p>
&lt;pre>&lt;code>root@photon-host [ ~ ]# rpm-ostree status -v
State: idle
AutomaticUpdates: disabled
Deployments:
* ostree://photon:photon/3.0/x86_64/minimal
Version: 3.0_minimal (2019-08-29T11:20:19Z)
Commit: a31a843985e314a9e70bcf09afe8d59f7351817d9fb743c2b6dab84f20833650
`- photon (2019-08-29T11:18:53Z)
Staged: no
StateRoot: photon
&lt;/code>&lt;/pre>&lt;h3 id="rpm-ostree-options">RPM OStree Options&lt;/h3>
&lt;p>To see the list of options available with the rpm-ostree command, use the -h option.&lt;/p>
&lt;pre>&lt;code>root@photon-host [ ~ ]# rpm-ostree -h
Usage:
rpm-ostree [OPTION?] COMMAND
Builtin Commands:
compose Commands to compose a tree
cleanup Clear cached/pending data
db Commands to query the RPM database
deploy Deploy a specific commit
rebase Switch to a different tree
rollback Revert to the previously booted tree
status Get the version of the booted system
upgrade Perform a system upgrade
reload Reload configuration
usroverlay Apply a transient overlayfs to /usr
cancel Cancel an active transaction
initramfs Enable or disable local initramfs regeneration
install Overlay additional packages
uninstall Remove overlayed additional packages
override Manage base package overrides
reset Remove all mutations
refresh-md Generate rpm repo metadata
kargs Query or modify kernel arguments
Help Options:
-h, --help Show help options
Application Options:
--version Print version information and exit
&lt;/code>&lt;/pre>&lt;h2 id="osname">OSname&lt;/h2>
&lt;p>The OS Name identifies the operating system installed. All bootable filetrees for the same OS will share the /var directory, in other words applications installed in one booted image into this directory will be available in all other images.&lt;br>
If a new set of images are created for a different OS, they will receive a fresh copy of /var that is not shared with the previous OS images for the initial OS. In other words, if a machine is dual boot for different operating systems, they will not share each other&amp;rsquo;s /var content, however they will still merge 3-way /etc.&lt;/p>
&lt;h2 id="refspec">Refspec&lt;/h2>
&lt;p>The &lt;strong>Refspec&lt;/strong> is a branch inside the repo, expressed in a hierarchical way. In this case, it&amp;rsquo;s the default branch that will receive package updates for the Photon OS 1.0 Minimal installation profile on Intel platforms. There could be other branches in the future, for example photon/3.0/x86_64/full that will match the Full installation profile (full set of packages installed).&lt;br>
Think of Refspec as the head of the minimal branch (just like in git) at the origin repo. On the replicated, local repo at the host, &lt;strong>minimal&lt;/strong> is a file that contains the latest commit ID known for that branch.&lt;/p>
&lt;pre>&lt;code>root@photon-host [ ~ ]# cat /ostree/repo/refs/remotes/photon/photon/3.0/x86_64/minimal
a31a843985e314a9e70bcf09afe8d59f7351817d9fb743c2b6dab84f20833650
&lt;/code>&lt;/pre>&lt;p>Why are there two &amp;lsquo;photon&amp;rsquo; directory levels in the remotes path? The &lt;strong>photon:&lt;/strong> prefix in the Refspec listed by &lt;code>rpm-ostree status&lt;/code> corresponds to the first &lt;strong>photon&lt;/strong> directory in the remotes path and is actually the name given to the remote that the host is connected to, which points to an http or https URL. We&amp;rsquo;ll talk about remotes later, but for now think of it as a namespace qualifier. The second &lt;strong>photon&lt;/strong> is part of the Refspec path itself.&lt;/p>
&lt;h2 id="deployments">Deployments&lt;/h2>
&lt;p>We&amp;rsquo;ve used so far &lt;code>rpm-ostree&lt;/code>. The same information can be obtained running an &lt;code>ostree&lt;/code> command:&lt;/p>
&lt;pre>&lt;code>root@photon-host [ ~ ]# ostree admin status
* photon a31a843985e314a9e70bcf09afe8d59f7351817d9fb743c2b6dab84f20833650.0
Version: 3.0_minimal
origin refspec: photon:photon/3.0/x86_64/minimal
&lt;/code>&lt;/pre>&lt;p>But where is this information stored? As you may have guessed, the local repo stores the heads of the deployed trees - the most recent commitment ID, just like Git does:&lt;/p>
&lt;pre>&lt;code>root@photon-host [ ~ ]# cat /ostree/repo/refs/heads/ostree/0/1/0
a31a843985e314a9e70bcf09afe8d59f7351817d9fb743c2b6dab84f20833650
&lt;/code>&lt;/pre>&lt;p>This also where this command that lists the references (local heads and remotes) takes its data from:&lt;/p>
&lt;pre>&lt;code>root@photon-host [ ~ ]# ostree refs
ostree/0/1/0
photon:photon/3.0/x86_64/minimal
&lt;/code>&lt;/pre>&lt;p>Based on that, it could find the root of the deployment that it boots from. The actual filetree is deployed right here:&lt;/p>
&lt;pre>&lt;code>root@photon-host [ ~ ]# ls -l /ostree/deploy/photon/deploy/a31a843985e314a9e70bcf09afe8d59f7351817d9fb743c2b6dab84f20833650.0
total 36
lrwxrwxrwx 2 root root 7 Sep 4 04:58 bin -&amp;gt; usr/bin
drwxr-xr-x 2 root root 4096 Jan 1 1970 boot
drwxr-xr-x 2 root root 4096 Jan 1 1970 dev
drwxr-xr-x 34 root root 4096 Sep 4 05:00 etc
lrwxrwxrwx 2 root root 8 Sep 4 04:58 home -&amp;gt; var/home
lrwxrwxrwx 3 root root 7 Sep 4 04:58 lib -&amp;gt; usr/lib
lrwxrwxrwx 3 root root 7 Sep 4 04:58 lib64 -&amp;gt; usr/lib
lrwxrwxrwx 2 root root 9 Sep 4 04:58 media -&amp;gt; run/media
lrwxrwxrwx 2 root root 7 Sep 4 04:58 mnt -&amp;gt; var/mnt
lrwxrwxrwx 2 root root 7 Sep 4 04:58 opt -&amp;gt; var/opt
lrwxrwxrwx 2 root root 14 Sep 4 04:58 ostree -&amp;gt; sysroot/ostree
drwxr-xr-x 2 root root 4096 Jan 1 1970 proc
lrwxrwxrwx 2 root root 12 Sep 4 04:58 root -&amp;gt; var/roothome
drwxr-xr-x 2 root root 4096 Jan 1 1970 run
lrwxrwxrwx 2 root root 8 Sep 4 04:58 sbin -&amp;gt; usr/sbin
lrwxrwxrwx 2 root root 7 Sep 4 04:58 srv -&amp;gt; var/srv
drwxr-xr-x 2 root root 4096 Jan 1 1970 sys
drwxr-xr-x 2 root root 4096 Jan 1 1970 sysroot
lrwxrwxrwx 2 root root 11 Sep 4 04:58 tmp -&amp;gt; sysroot/tmp
drwxr-xr-x 10 root root 4096 Jan 1 1970 usr
drwxr-xr-x 8 root root 4096 Sep 4 04:59 var
&lt;/code>&lt;/pre>&lt;p>So how is a deployment linked to a specific branch, originating from a remote repo? Well, there is a file next to the deployed filetree root directory with the same name and &lt;strong>.origin&lt;/strong> suffix, that contains exactly this info:&lt;/p>
&lt;pre>&lt;code>root@photon-host [ ~ ]# cat /ostree/deploy/photon/deploy/a31a843985e314a9e70bcf09afe8d59f7351817d9fb743c2b6dab84
f20833650.0.origin
[origin]
refspec=photon:photon/3.0/x86_64/minimal
&lt;/code>&lt;/pre>&lt;p>Fast forwarding a bit, if there is a new deployment due to an upgrade or rebase, a new filetree will be added at the same level, and a new .origin file will tie it to the remote branch it originated from.&lt;/p>
&lt;p>The &lt;strong>photon&lt;/strong> directory in the path is the actual OSname. Multiple deployments of same OS will share a writable /var folder.&lt;/p>
&lt;pre>&lt;code>root@photon-host [ ~ ]# ls -l /ostree/deploy/photon/var/
total 52
drwxr-xr-x 4 root root 4096 Sep 4 05:00 cache
drwxr-xr-x 2 root root 4096 Sep 4 05:00 home
drwxr-xr-x 14 root root 4096 Sep 4 05:00 lib
drwxr-xr-x 2 root root 4096 Sep 4 05:00 local
lrwxrwxrwx 1 root root 11 Sep 4 04:59 lock -&amp;gt; ../run/lock
drwxr-xr-x 4 root root 4096 Sep 4 05:00 log
drwxr-xr-x 2 root root 4096 Sep 4 05:00 mail
drwxr-xr-x 2 root root 4096 Sep 4 05:00 mnt
drwxr-xr-x 4 root root 4096 Sep 4 05:00 opt
drwx------ 3 root root 4096 Sep 4 05:25 roothome
lrwxrwxrwx 1 root root 6 Sep 4 04:59 run -&amp;gt; ../run
drwxr-xr-x 2 root root 4096 Sep 4 05:00 spool
drwxr-xr-x 2 root root 4096 Sep 4 05:00 srv
drwxrwxrwt 5 root root 4096 Sep 4 05:34 tmp
drwxr-xr-x 11 root root 4096 Sep 4 05:00 usrlocal
&lt;/code>&lt;/pre></description></item><item><title>Docs-V3: Querying For Commit File and Package Metadata</title><link>/docs-v3/administration-guide/photon-rpm-ostree/querying-for-metadata/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs-v3/administration-guide/photon-rpm-ostree/querying-for-metadata/</guid><description>
&lt;p>There are several ostree and rpm-ostree commands that list file or package data based on either the Commit ID, or Refspec. If Refspec is passed as a parameter, it&amp;rsquo;s the same as passing the most recent commit ID (head) for that branch.&lt;/p>
&lt;h2 id="commit-history">Commit history&lt;/h2>
&lt;p>For a host that is freshly installed, there is only one commit in the history for the only branch.&lt;/p>
&lt;pre>&lt;code>root@photon-host [ ~ ]# ostree log photon/3.0/x86_64/minimal
commit a31a843985e314a9e70bcf09afe8d59f7351817d9fb743c2b6dab84f20833650
ContentChecksum: e91261daf8d60074f334a7ebf81d3b930c3fc88c765f994f79ab2445296f03c5
Date: 2019-08-29 11:20:19 +0000
Version: 3.0_minimal
&lt;/code>&lt;/pre>&lt;p>This commit has no parent; if there was an older commit, it would have been listed too. We can get the same listing (either nicely formatted or raw variant data) by passing the Commit ID. Just the first several hex digits will suffice to identify the commit ID. We can either request to be displayed in a pretty format, or raw - the actual C struct.&lt;/p>
&lt;pre>&lt;code>root@photon-host [ ~ ]# ostree log a31a
commit a31a843985e314a9e70bcf09afe8d59f7351817d9fb743c2b6dab84f20833650
ContentChecksum: e91261daf8d60074f334a7ebf81d3b930c3fc88c765f994f79ab2445296f03c5
Date: 2019-08-29 11:20:19 +0000
Version: 3.0_minimal
&lt;/code>&lt;/pre>&lt;pre>&lt;code>root@photon-host [ ~ ]# ostree log a31a --raw
commit a31a843985e314a9e70bcf09afe8d59f7351817d9fb743c2b6dab84f20833650
({'rpmostree.inputhash': &amp;lt;'a3e8f3f6ef6e93c2ed6ce9edd1e9e80c93a36ecda0fed0d78f607e6ec3179d04'&amp;gt;, 'rpmostree.rpmmd-repos': &amp;lt;[{'id': &amp;lt;'photon'&amp;gt;, 'timestamp': &amp;lt;uint64 1567077533&amp;gt;}]&amp;gt;, 'version': &amp;lt;'3.0_minimal'&amp;gt;, 'rpmostree.rpmdb.pkglist': &amp;lt;[('Linux-PAM', '0', '1.3.0', '1.ph3', 'x86_64'), ('attr', '0', '2.4.48', '1.ph3', 'x86_64'), ('autogen-libopts', '0', '5.18.16', '1.ph3', 'x86_64'), ('bash', '0', '4.4.18', '1.ph3', 'x86_64'), ('bc', '0', '1.07.1', '1.ph3', 'x86_64'), ('binutils', '0', '2.31.1', '6.ph3', 'x86_64'), ('bridge-utils', '0', '1.6', '1.ph3', 'x86_64'), ('bubblewrap', '0', '0.3.0', '2.ph3', 'x86_64'), ('bzip2', '0', '1.0.6', '10.ph3', 'x86_64'), ('bzip2-libs', '0', '1.0.6', '10.ph3', 'x86_64'), ('ca-certificates', '0', '20190521', '1.ph3', 'x86_64'), ('ca-certificates-pki', '0', '20190521', '1.ph3', 'x86_64'), ('coreutils', '0', '8.30', '1.ph3', 'x86_64'), ('cpio', '0', '2.12', '4.ph3', 'x86_64'), ('cracklib', '0', '2.9.6', '8.ph3', 'x86_64'), ('cracklib-dicts', '0', '2.9.6', '8.ph3', 'x86_64'), ('curl', '0', '7.61.1', '4.ph3', 'x86_64'), ('curl-libs', '0', '7.61.1', '4.ph3', 'x86_64'), ('dbus', '0', '1.13.6', '1.ph3', 'x86_64'), ('device-mapper', '0', '2.02.181', '1.ph3', 'x86_64'), ('device-mapper-libs', '0', '2.02.181', '1.ph3', 'x86_64'), ('docker', '0', '18.06.2', '3.ph3', 'x86_64'), ('dracut', '0', '048', '1.ph3', 'x86_64'), ('dracut-tools', '0', '048', '1.ph3', 'x86_64'), ('e2fsprogs-libs', '0', '1.44.3', '2.ph3', 'x86_64'), ('elfutils', '0', '0.176', '1.ph3', 'x86_64'), ('elfutils-libelf', '0', '0.176', '1.ph3', 'x86_64'), ('expat', '0', '2.2.6', '2.ph3', 'x86_64'), ('expat-libs', '0', '2.2.6', '2.ph3', 'x86_64'), ('file', '0', '5.34', '1.ph3', 'x86_64'), ('file-libs', '0', '5.34', '1.ph3', 'x86_64'), ('filesystem', '0', '1.1', '4.ph3', 'x86_64'), ('findutils', '0', '4.6.0', '5.ph3', 'x86_64'), ('flex', '0', '2.6.4', '2.ph3', 'x86_64'), ('fuse', '0', '2.9.7', '5.ph3', 'x86_64'), ('gc', '0', '8.0.0', '1.ph3', 'x86_64'), ('glib', '0', '2.58.0', '4.ph3', 'x86_64'), ('glib-networking', '0', '2.59.1', '2.ph3', 'x86_64'), ('glibc', '0', '2.28', '4.ph3', 'x86_64'), ('glibc-iconv', '0', '2.28', '4.ph3', 'x86_64'), ('gmp', '0', '6.1.2', '2.ph3', 'x86_64'), ('gnupg', '0', '2.2.17', '1.ph3', 'x86_64'), ('gnutls', '0', '3.6.3', '3.ph3', 'x86_64'), ('gobject-introspection', '0', '1.58.0', '2.ph3', 'x86_64'), ('gpgme', '0', '1.11.1', '2.ph3', 'x86_64'), ('grep', '0', '3.1', '1.ph3', 'x86_64'), ('grub2', '0', '2.02', '13.ph3', 'x86_64'), ('grub2-efi', '0', '2.02', '13.ph3', 'x86_64'), ('grub2-pc', '0', '2.02', '13.ph3', 'x86_64'), ('guile', '0', '2.0.13', '2.ph3', 'x86_64'), ('gzip', '0', '1.9', '1.ph3', 'x86_64'), ('iana-etc', '0', '2.30', '2.ph3', 'noarch'), ('icu', '0', '61.1', '1.ph3', 'x86_64'), ('iproute2', '0', '4.18.0', '2.ph3', 'x86_64'), ('iptables', '0', '1.8.3', '1.ph3', 'x86_64'), ('js', '0', '1.8.5', '2.ph3', 'x86_64'), ('json-c', '0', '0.13.1', '1.ph3', 'x86_64'), ('json-glib', '0', '1.4.4', '1.ph3', 'x86_64'), ('kmod', '0', '25', '1.ph3', 'x86_64'), ('krb5', '0', '1.17', '1.ph3', 'x86_64'), ('libapparmor', '0', '2.13', '7.ph3', 'x86_64'), ('libarchive', '0', '3.3.3', '3.ph3', 'x86_64'), ('libassuan', '0', '2.5.1', '1.ph3', 'x86_64'), ('libcap', '0', '2.25', '8.ph3', 'x86_64'), ('libdb', '0', '5.3.28', '2.ph3', 'x86_64'), ('libffi', '0', '3.2.1', '6.ph3', 'x86_64'), ('libgcc', '0', '7.3.0', '4.ph3', 'x86_64'), ('libgcrypt', '0', '1.8.3', '2.ph3', 'x86_64'), ('libgomp', '0', '7.3.0', '4.ph3', 'x86_64'), ('libgpg-error', '0', '1.32', '1.ph3', 'x86_64'), ('libgsystem', '0', '2015.2', '2.ph3', 'x86_64'), ('libksba', '0', '1.3.5', '1.ph3', 'x86_64'), ('libltdl', '0', '2.4.6', '3.ph3', 'x86_64'), ('libmodulemd', '0', '2.4.0', '1.ph3', 'x86_64'), ('libpsl', '0', '0.20.2', '1.ph3', 'x86_64'), ('librepo', '0', '1.10.2', '1.ph3', 'x86_64'), ('libseccomp', '0', '2.4.0', '1.ph3', 'x86_64'), ('libselinux', '0', '2.8', '1.ph3', 'x86_64'), ('libsepol', '0', '2.8', '1.ph3', 'x86_64'), ('libsolv', '0', '0.6.35', '1.ph3', 'x86_64'), ('libsoup', '0', '2.64.0', '2.ph3', 'x86_64'), ('libssh2', '0', '1.9.0', '1.ph3', 'x86_64'), ('libstdc++', '0', '7.3.0', '4.ph3', 'x86_64'), ('libtasn1', '0', '4.13', '1.ph3', 'x86_64'), ('libtool', '0', '2.4.6', '3.ph3', 'x86_64'), ('libunistring', '0', '0.9.10', '1.ph3', 'x86_64'), ('libxml2', '0', '2.9.9', '1.ph3', 'x86_64'), ('libyaml', '0', '0.2.1', '2.ph3', 'x86_64'), ('linux', '0', '4.19.65', '3.ph3', 'x86_64'), ('m4', '0', '1.4.18', '2.ph3', 'x86_64'), ('mpfr', '0', '4.0.1', '1.ph3', 'x86_64'), ('ncurses', '0', '6.1', '1.ph3', 'x86_64'), ('ncurses-libs', '0', '6.1', '1.ph3', 'x86_64'), ('ncurses-terminfo', '0', '6.1', '1.ph3', 'x86_64'), ('net-tools', '0', '1.60', '11.ph3', 'x86_64'), ('nettle', '0', '3.4', '1.ph3', 'x86_64'), ('npth', '0', '1.6', '1.ph3', 'x86_64'), ('nspr', '0', '4.21', '1.ph3', 'x86_64'), ('nss-altfiles', '0', '2.23.0', '1.ph3', 'x86_64'), ('nss-libs', '0', '3.44', '2.ph3', 'x86_64'), ('openssh', '0', '7.8p1', '5.ph3', 'x86_64'), ('openssh-clients', '0', '7.8p1', '5.ph3', 'x86_64'), ('openssh-server', '0', '7.8p1', '5.ph3', 'x86_64'), ('openssl', '0', '1.0.2s', '1.ph3', 'x86_64'), ('ostree', '0', '2019.2', '1.ph3', 'x86_64'), ('ostree-grub2', '0', '2019.2', '1.ph3', 'x86_64'), ('ostree-libs', '0', '2019.2', '1.ph3', 'x86_64'), ('pcre', '0', '8.42', '1.ph3', 'x86_64'), ('pcre-libs', '0', '8.42', '1.ph3', 'x86_64'), ('photon-release', '0', '3.0', '3.ph3', 'noarch'), ('photon-repos', '0', '3.0', '3.ph3', 'noarch'), ('pinentry', '0', '1.1.0', '1.ph3', 'x86_64'), ('pkg-config', '0', '0.29.2', '2.ph3', 'x86_64'), ('polkit', '0', '0.113', '5.ph3', 'x86_64'), ('popt', '0', '1.16', '5.ph3', 'x86_64'), ('procps-ng', '0', '3.3.15', '1.ph3', 'x86_64'), ('python3', '0', '3.7.3', '2.ph3', 'x86_64'), ('python3-libs', '0', '3.7.3', '2.ph3', 'x86_64'), ('readline', '0', '7.0', '2.ph3', 'x86_64'), ('rpm-libs', '0', '4.14.2', '4.ph3', 'x86_64'), ('rpm-ostree', '0', '2019.3', '1.ph3', 'x86_64'), ('sed', '0', '4.5', '1.ph3', 'x86_64'), ('shadow', '0', '4.6', '3.ph3', 'x86_64'), ('shadow-tools', '0', '4.6', '3.ph3', 'x86_64'), ('sqlite-libs', '0', '3.27.2', '3.ph3', 'x86_64'), ('systemd', '0', '239', '13.ph3', 'x86_64'), ('util-linux', '0', '2.32', '1.ph3', 'x86_64'), ('util-linux-libs', '0', '2.32', '1.ph3', 'x86_64'), ('vim', '0', '8.1.0388', '4.ph3', 'x86_64'), ('which', '0', '2.21', '5.ph3', 'x86_64'), ('xz', '0', '5.2.4', '1.ph3', 'x86_64'), ('xz-libs', '0', '5.2.4', '1.ph3', 'x86_64'), ('zchunk', '0', '1.1.1', '1.ph3', 'x86_64'), ('zchunk-libs', '0', '1.1.1', '1.ph3', 'x86_64'), ('zlib', '0', '1.2.11', '1.ph3', 'x86_64')]&amp;gt;}, @ay [], @a(say) [], '', '', uint64 1567077619, [byte 0x1e, 0x0a, 0x85, 0x20, 0xa8, 0xe0, 0x18, 0x6a, 0x88, 0x15, 0xc0, 0xd9, 0xb0, 0xab, 0xc9, 0x98, 0x94, 0xa1, 0xfb, 0x0a, 0x48, 0xdf, 0xa0, 0x73, 0x32, 0x02, 0x9a, 0xdf, 0x49, 0xed, 0x13, 0x8d], [byte 0x44, 0x6a, 0x0e, 0xf1, 0x1b, 0x7c, 0xc1, 0x67, 0xf3, 0xb6, 0x03, 0xe5, 0x85, 0xc7, 0xee, 0xee, 0xb6, 0x75, 0xfa, 0xa4, 0x12, 0xd5, 0xec, 0x73, 0xf6, 0x29, 0x88, 0xeb, 0x0b, 0x6c, 0x54, 0x88])
&lt;/code>&lt;/pre>&lt;h2 id="listing-file-mappings">Listing file mappings&lt;/h2>
&lt;p>This command lists the file relations between the original source Linux Photon filetree and the deployed filetree. The normal columns include file type type (regular file, directory, link), permissions in chmod octal format, userID, groupID, file size, file name.&lt;/p>
&lt;pre>&lt;code>root@photon-host [ ~ ]# ostree ls photon/3.0/x86_64/minimal
d00755 0 0 0 /
l00777 0 0 0 /bin -&amp;gt; usr/bin
l00777 0 0 0 /home -&amp;gt; var/home
l00777 0 0 0 /lib -&amp;gt; usr/lib
l00777 0 0 0 /lib64 -&amp;gt; usr/lib
l00777 0 0 0 /media -&amp;gt; run/media
l00777 0 0 0 /mnt -&amp;gt; var/mnt
l00777 0 0 0 /opt -&amp;gt; var/opt
l00777 0 0 0 /ostree -&amp;gt; sysroot/ostree
l00777 0 0 0 /root -&amp;gt; var/roothome
l00777 0 0 0 /sbin -&amp;gt; usr/sbin
l00777 0 0 0 /srv -&amp;gt; var/srv
l00777 0 0 0 /tmp -&amp;gt; sysroot/tmp
d00755 0 0 0 /boot
d00755 0 0 0 /dev
d00755 0 0 0 /proc
d00755 0 0 0 /run
d00755 0 0 0 /sys
d00755 0 0 0 /sysroot
d00755 0 0 0 /usr
d00755 0 0 0 /var
&lt;/code>&lt;/pre>&lt;p>Extra columns can be added like checksum (-C) and extended attributes (-X).&lt;/p>
&lt;pre>&lt;code>root@photon-host [ /usr/share/man/man1 ]# ostree ls photon/3.0/x86_64/minimal -C
d00755 0 0 0 1e0a8520a8e0186a8815c0d9b0abc99894a1fb0a48dfa07332029adf49ed138d 446a0ef11b7cc167f3b603e585c7eeeeb675faa412d5ec73f62988eb0b6c5488 /
l00777 0 0 0 389846c2702216e1367c8dfb68326a6b93ccf5703c89c93979052a9bf359608e /bin -&amp;gt; usr/bin
l00777 0 0 0 4344c10bf4931483f918496534f12ed9b50dc6a2cead35e3cd9dd898d6ac9414 /home -&amp;gt; var/home
l00777 0 0 0 f11902ca9d69a80df33918534a3e443251fd0aa7f94b76301e1f55e52aed29dd /lib -&amp;gt; usr/lib
l00777 0 0 0 f11902ca9d69a80df33918534a3e443251fd0aa7f94b76301e1f55e52aed29dd /lib64 -&amp;gt; usr/lib
l00777 0 0 0 75317a3df11447c470ffdd63dde045450ca97dfb2a97a0f3f6a21a5da66f737c /media -&amp;gt; run/media
l00777 0 0 0 97c55dbe24e8f3aecfd3f3e5b3f44646fccbb39799807d37a217e9c871da108b /mnt -&amp;gt; var/mnt
l00777 0 0 0 46b1abbd27a846a9257a8d8c9fc4b384ac0888bdb8ac0d6a2d5de72715bd5092 /opt -&amp;gt; var/opt
l00777 0 0 0 d37269e3f46023fd0275212473e07011894cdf4148cbf3fb5758a7e9471dad8e /ostree -&amp;gt; sysroot/ostree
l00777 0 0 0 6f800e74eed172661278d1e1f09e389a6504dcd3358618e1c1618f91f9d33601 /root -&amp;gt; var/roothome
l00777 0 0 0 e0bead7be9323b06bea05cb9b66eb151839989e3a4e5d1a93e09a36919e91818 /sbin -&amp;gt; usr/sbin
l00777 0 0 0 5d4250bba1ed300f793fa9769474351ee5cebd71e8339078af7ebfbe6256d9b5 /srv -&amp;gt; var/srv
l00777 0 0 0 364fbd62f91ca1e06eb7dbd50c93de8976f2cea633658e2dbe803ce6f7490c09 /tmp -&amp;gt; sysroot/tmp
d00755 0 0 0 6e340b9cffb37a989ca544e6bb780a2c78901d3fb33738768511a30617afa01d 446a0ef11b7cc167f3b603e585c7eeeeb675faa412d5ec73f62988eb0b6c5488 /boot
d00755 0 0 0 6e340b9cffb37a989ca544e6bb780a2c78901d3fb33738768511a30617afa01d 446a0ef11b7cc167f3b603e585c7eeeeb675faa412d5ec73f62988eb0b6c5488 /dev
d00755 0 0 0 6e340b9cffb37a989ca544e6bb780a2c78901d3fb33738768511a30617afa01d 446a0ef11b7cc167f3b603e585c7eeeeb675faa412d5ec73f62988eb0b6c5488 /proc
d00755 0 0 0 6e340b9cffb37a989ca544e6bb780a2c78901d3fb33738768511a30617afa01d 446a0ef11b7cc167f3b603e585c7eeeeb675faa412d5ec73f62988eb0b6c5488 /run
d00755 0 0 0 6e340b9cffb37a989ca544e6bb780a2c78901d3fb33738768511a30617afa01d 446a0ef11b7cc167f3b603e585c7eeeeb675faa412d5ec73f62988eb0b6c5488 /sys
d00755 0 0 0 6e340b9cffb37a989ca544e6bb780a2c78901d3fb33738768511a30617afa01d 446a0ef11b7cc167f3b603e585c7eeeeb675faa412d5ec73f62988eb0b6c5488 /sysroot
d00755 0 0 0 ef1c0980e0d77f64e7f250a3e48f0b24e9285fc0716b80520dac6f98c148324a 446a0ef11b7cc167f3b603e585c7eeeeb675faa412d5ec73f62988eb0b6c5488 /usr
d00755 0 0 0 a3a987e053ea5a116f1e75a31cd7557fc6e57a3ae09e64171d7fea17ef71ec3e 446a0ef11b7cc167f3b603e585c7eeeeb675faa412d5ec73f62988eb0b6c5488 /var
&lt;/code>&lt;/pre>&lt;p>By default, only the top folders are listed, but -R will list recursively. Instead of listing over 10,000 files, let&amp;rsquo;s filter to just all files that contain &amp;lsquo;rpm-ostree&amp;rsquo;, &amp;lsquo;rpmostree&amp;rsquo; or &amp;lsquo;RpmOstree&amp;rsquo;, that must belong to &lt;strong>rpm-ostree&lt;/strong> package itself.&lt;/p>
&lt;pre>&lt;code>root@photon-host [ /usr/share/rpm-ostree ]# ostree ls photon/3.0/x86_64/minimal -R | grep -e '[Rr]pm-\?[Oo]stree'
-00755 0 0 749000 /usr/bin/rpm-ostree
d00755 0 0 0 /usr/bin/rpm-ostree-host
-00644 0 0 1069 /usr/bin/rpm-ostree-host/function.inc
-00755 0 0 10507 /usr/bin/rpm-ostree-host/mk-ostree-host.sh
-00644 0 0 209 /usr/etc/rpm-ostreed.conf
-00644 0 0 1530 /usr/etc/dbus-1/system.d/org.projectatomic.rpmostree1.conf
l00777 0 0 0 /usr/lib/librpmostree-1.so.1 -&amp;gt; librpmostree-1.so.1.0.0
-00755 0 0 5278496 /usr/lib/librpmostree-1.so.1.0.0
-00644 0 0 2312 /usr/lib/girepository-1.0/RpmOstree-1.0.typelib
-00755 0 0 22 /usr/lib/kernel/install.d/00-rpmostree-skip.install
d00755 0 0 0 /usr/lib/rpm-ostree
-00755 0 0 1640704 /usr/lib/rpm-ostree/libdnf.so.2
-00644 0 0 622 /usr/lib/rpm-ostree/rpm-ostree-0-integration.conf
d00755 0 0 0 /usr/lib/sysimage/rpm-ostree-base-db
-00644 0 0 544768 /usr/lib/sysimage/rpm-ostree-base-db/Basenames
-00644 0 0 8192 /usr/lib/sysimage/rpm-ostree-base-db/Conflictname
-00644 0 0 110592 /usr/lib/sysimage/rpm-ostree-base-db/Dirnames
-00644 0 0 8192 /usr/lib/sysimage/rpm-ostree-base-db/Enhancename
-00644 0 0 8192 /usr/lib/sysimage/rpm-ostree-base-db/Filetriggername
-00644 0 0 8192 /usr/lib/sysimage/rpm-ostree-base-db/Group
-00644 0 0 12288 /usr/lib/sysimage/rpm-ostree-base-db/Installtid
-00644 0 0 8192 /usr/lib/sysimage/rpm-ostree-base-db/Name
-00644 0 0 8192 /usr/lib/sysimage/rpm-ostree-base-db/Obsoletename
-00644 0 0 2625536 /usr/lib/sysimage/rpm-ostree-base-db/Packages
-00644 0 0 86016 /usr/lib/sysimage/rpm-ostree-base-db/Providename
-00644 0 0 8192 /usr/lib/sysimage/rpm-ostree-base-db/Recommendname
-00644 0 0 69632 /usr/lib/sysimage/rpm-ostree-base-db/Requirename
-00644 0 0 20480 /usr/lib/sysimage/rpm-ostree-base-db/Sha1header
-00644 0 0 16384 /usr/lib/sysimage/rpm-ostree-base-db/Sigmd5
-00644 0 0 8192 /usr/lib/sysimage/rpm-ostree-base-db/Suggestname
-00644 0 0 8192 /usr/lib/sysimage/rpm-ostree-base-db/Supplementname
-00644 0 0 8192 /usr/lib/sysimage/rpm-ostree-base-db/Transfiletriggername
-00644 0 0 8192 /usr/lib/sysimage/rpm-ostree-base-db/Triggername
-00644 0 0 263 /usr/lib/systemd/system/rpm-ostree-bootstatus.service
-00644 0 0 257 /usr/lib/systemd/system/rpm-ostreed-automatic.service
-00644 0 0 227 /usr/lib/systemd/system/rpm-ostreed-automatic.timer
-00644 0 0 272 /usr/lib/systemd/system/rpm-ostreed.service
-00644 0 0 102 /usr/lib/systemd/system-preset/40-rpm-ostree-auto.preset
-00644 0 0 622 /usr/lib/tmpfiles.d/rpm-ostree-0-integration.conf
-00644 0 0 1082 /usr/lib/tmpfiles.d/rpm-ostree-1-autovar.conf
-00755 0 0 53 /usr/libexec/rpm-ostreed
-00644 0 0 3049 /usr/share/bash-completion/completions/rpm-ostree
-00644 0 0 15997 /usr/share/dbus-1/interfaces/org.projectatomic.rpmostree1.xml
-00644 0 0 133 /usr/share/dbus-1/system-services/org.projectatomic.rpmostree1.service
-00644 0 0 6160 /usr/share/polkit-1/actions/org.projectatomic.rpmostree1.policy
d00755 0 0 0 /usr/share/rpm-ostree
-00644 0 0 1169 /usr/share/rpm-ostree/treefile.json
&lt;/code>&lt;/pre>&lt;p>&lt;strong>atomic&lt;/strong> is really an alias for rpm-ostree command. The last file &lt;strong>treefile.json&lt;/strong> is not installed by the rpm-ostree package, it is actually downloaded from the server, as we will see in the next chapter. For now, let us notice &lt;strong>&amp;ldquo;osname&amp;rdquo; : &amp;ldquo;photon&amp;rdquo;, &amp;ldquo;ref&amp;rdquo; : &amp;ldquo;photon/1.0/x86_64/minimal&amp;rdquo;, &amp;ldquo;automatic_version_prefix&amp;rdquo; : &amp;ldquo;1.0_minimal&amp;rdquo;&lt;/strong>, that matches what we have known so far, and also the &lt;strong>&amp;ldquo;documentation&amp;rdquo; : false&lt;/strong> setting, that explains why there are no manual files installed for rpm-ostree, and in fact for any package.&lt;/p>
&lt;pre>&lt;code>root@photon-host [ /usr/share/rpm-ostree ]# ls -l /usr/share/man/man1
total 0
&lt;/code>&lt;/pre>&lt;h2 id="listing-configuration-changes">Listing configuration changes&lt;/h2>
&lt;p>To diff the current /etc configuration versus default /etc (from the base image), this command will show the &lt;strong>M&lt;/strong>odified, &lt;strong>A&lt;/strong>dded and &lt;strong>D&lt;/strong>eleted files:&lt;/p>
&lt;pre>&lt;code>root@photon-host [ ~ ]# ostree admin config-diff
M ssh/sshd_config
M machine-id
M fstab
M hosts
M mtab
M shadow
A ssh/ssh_host_rsa_key
A ssh/ssh_host_rsa_key.pub
A ssh/ssh_host_dsa_key
A ssh/ssh_host_dsa_key.pub
A ssh/ssh_host_ecdsa_key
A ssh/ssh_host_ecdsa_key.pub
A ssh/ssh_host_ed25519_key
A ssh/ssh_host_ed25519_key.pub
A udev/hwdb.bin
A resolv.conf
A hostname
A localtime
A .pwd.lock
A .updated
&lt;/code>&lt;/pre>&lt;h2 id="listing-packages">Listing packages&lt;/h2>
&lt;p>The following is the rpm-ostree command that lists all the packages for that branch, extracted from RPM database.&lt;/p>
&lt;pre>&lt;code>root@photon-host [ ~ ]# rpm-ostree db list photon/3.0/x86_64/minimal
ostree commit: photon/3.0/x86_64/minimal (a31a843985e314a9e70bcf09afe8d59f7351817d9fb743c2b6dab84f20833650)
Linux-PAM-1.3.0-1.ph3.x86_64
attr-2.4.48-1.ph3.x86_64
autogen-libopts-5.18.16-1.ph3.x86_64
bash-4.4.18-1.ph3.x86_64
bc-1.07.1-1.ph3.x86_64
binutils-2.31.1-6.ph3.x86_64
bridge-utils-1.6-1.ph3.x86_64
bubblewrap-0.3.0-2.ph3.x86_64
bzip2-1.0.6-10.ph3.x86_64
bzip2-libs-1.0.6-10.ph3.x86_64
ca-certificates-20190521-1.ph3.x86_64
ca-certificates-pki-20190521-1.ph3.x86_64
coreutils-8.30-1.ph3.x86_64
cpio-2.12-4.ph3.x86_64
cracklib-2.9.6-8.ph3.x86_64
cracklib-dicts-2.9.6-8.ph3.x86_64
curl-7.61.1-4.ph3.x86_64
curl-libs-7.61.1-4.ph3.x86_64
dbus-1.13.6-1.ph3.x86_64
device-mapper-2.02.181-1.ph3.x86_64
device-mapper-libs-2.02.181-1.ph3.x86_64
docker-18.06.2-3.ph3.x86_64
dracut-048-1.ph3.x86_64
dracut-tools-048-1.ph3.x86_64
e2fsprogs-libs-1.44.3-2.ph3.x86_64
elfutils-0.176-1.ph3.x86_64
elfutils-libelf-0.176-1.ph3.x86_64
expat-2.2.6-2.ph3.x86_64
expat-libs-2.2.6-2.ph3.x86_64
file-5.34-1.ph3.x86_64
file-libs-5.34-1.ph3.x86_64
filesystem-1.1-4.ph3.x86_64
findutils-4.6.0-5.ph3.x86_64
flex-2.6.4-2.ph3.x86_64
fuse-2.9.7-5.ph3.x86_64
gc-8.0.0-1.ph3.x86_64
glib-2.58.0-4.ph3.x86_64
glib-networking-2.59.1-2.ph3.x86_64
glibc-2.28-4.ph3.x86_64
glibc-iconv-2.28-4.ph3.x86_64
gmp-6.1.2-2.ph3.x86_64
gnupg-2.2.17-1.ph3.x86_64
gnutls-3.6.3-3.ph3.x86_64
gobject-introspection-1.58.0-2.ph3.x86_64
gpgme-1.11.1-2.ph3.x86_64
grep-3.1-1.ph3.x86_64
grub2-2.02-13.ph3.x86_64
grub2-efi-2.02-13.ph3.x86_64
grub2-pc-2.02-13.ph3.x86_64
guile-2.0.13-2.ph3.x86_64
gzip-1.9-1.ph3.x86_64
iana-etc-2.30-2.ph3.noarch
icu-61.1-1.ph3.x86_64
iproute2-4.18.0-2.ph3.x86_64
iptables-1.8.3-1.ph3.x86_64
js-1.8.5-2.ph3.x86_64
json-c-0.13.1-1.ph3.x86_64
json-glib-1.4.4-1.ph3.x86_64
kmod-25-1.ph3.x86_64
krb5-1.17-1.ph3.x86_64
libapparmor-2.13-7.ph3.x86_64
libarchive-3.3.3-3.ph3.x86_64
libassuan-2.5.1-1.ph3.x86_64
libcap-2.25-8.ph3.x86_64
libdb-5.3.28-2.ph3.x86_64
libffi-3.2.1-6.ph3.x86_64
libgcc-7.3.0-4.ph3.x86_64
libgcrypt-1.8.3-2.ph3.x86_64
libgomp-7.3.0-4.ph3.x86_64
libgpg-error-1.32-1.ph3.x86_64
libgsystem-2015.2-2.ph3.x86_64
libksba-1.3.5-1.ph3.x86_64
libltdl-2.4.6-3.ph3.x86_64
libmodulemd-2.4.0-1.ph3.x86_64
libpsl-0.20.2-1.ph3.x86_64
librepo-1.10.2-1.ph3.x86_64
libseccomp-2.4.0-1.ph3.x86_64
libselinux-2.8-1.ph3.x86_64
libsepol-2.8-1.ph3.x86_64
libsolv-0.6.35-1.ph3.x86_64
libsoup-2.64.0-2.ph3.x86_64
libssh2-1.9.0-1.ph3.x86_64
libstdc++-7.3.0-4.ph3.x86_64
libtasn1-4.13-1.ph3.x86_64
libtool-2.4.6-3.ph3.x86_64
libunistring-0.9.10-1.ph3.x86_64
libxml2-2.9.9-1.ph3.x86_64
libyaml-0.2.1-2.ph3.x86_64
linux-4.19.65-3.ph3.x86_64
m4-1.4.18-2.ph3.x86_64
mpfr-4.0.1-1.ph3.x86_64
ncurses-6.1-1.ph3.x86_64
ncurses-libs-6.1-1.ph3.x86_64
ncurses-terminfo-6.1-1.ph3.x86_64
net-tools-1.60-11.ph3.x86_64
nettle-3.4-1.ph3.x86_64
npth-1.6-1.ph3.x86_64
nspr-4.21-1.ph3.x86_64
nss-altfiles-2.23.0-1.ph3.x86_64
nss-libs-3.44-2.ph3.x86_64
openssh-7.8p1-5.ph3.x86_64
openssh-clients-7.8p1-5.ph3.x86_64
openssh-server-7.8p1-5.ph3.x86_64
openssl-1.0.2s-1.ph3.x86_64
ostree-2019.2-1.ph3.x86_64
ostree-grub2-2019.2-1.ph3.x86_64
ostree-libs-2019.2-1.ph3.x86_64
pcre-8.42-1.ph3.x86_64
pcre-libs-8.42-1.ph3.x86_64
photon-release-3.0-3.ph3.noarch
photon-repos-3.0-3.ph3.noarch
pinentry-1.1.0-1.ph3.x86_64
pkg-config-0.29.2-2.ph3.x86_64
polkit-0.113-5.ph3.x86_64
popt-1.16-5.ph3.x86_64
procps-ng-3.3.15-1.ph3.x86_64
python3-3.7.3-2.ph3.x86_64
python3-libs-3.7.3-2.ph3.x86_64
readline-7.0-2.ph3.x86_64
rpm-libs-4.14.2-4.ph3.x86_64
rpm-ostree-2019.3-1.ph3.x86_64
sed-4.5-1.ph3.x86_64
shadow-4.6-3.ph3.x86_64
shadow-tools-4.6-3.ph3.x86_64
sqlite-libs-3.27.2-3.ph3.x86_64
systemd-239-13.ph3.x86_64
util-linux-2.32-1.ph3.x86_64
util-linux-libs-2.32-1.ph3.x86_64
vim-8.1.0388-4.ph3.x86_64
which-2.21-5.ph3.x86_64
xz-5.2.4-1.ph3.x86_64
xz-libs-5.2.4-1.ph3.x86_64
zchunk-1.1.1-1.ph3.x86_64
zchunk-libs-1.1.1-1.ph3.x86_64
zlib-1.2.11-1.ph3.x86_64
&lt;/code>&lt;/pre>&lt;h2 id="querying-for-package-details">Querying for package details&lt;/h2>
&lt;p>We are able to use the query option of rpm to make sure any package have been installed properly. The files list should match the previous file mappings in 4.2, so let&amp;rsquo;s check package &lt;strong>rpm-ostree&lt;/strong>. As we&amp;rsquo;ve seen, manual files listed here are actually missing, they were not installed.&lt;/p>
&lt;pre>&lt;code>root@photon-host [ /usr/share/man/man1 ]# rpm -ql rpm-ostree
/usr/bin/atomic
/usr/bin/rpm-ostree
/usr/lib/girepository-1.0/RpmOstree-1.0.typelib
/usr/lib/librpmostree-1.so.1
/usr/lib/librpmostree-1.so.1.0.0
/usr/lib/rpm-ostree
/usr/lib/rpm-ostree/tmpfiles-ostree-integration.conf
/usr/share/man/man1/atomic.1.gz
/usr/share/man/man1/rpm-ostree.1.gz
&lt;/code>&lt;/pre>&lt;h2 id="why-am-i-unable-to-install-upgrade-or-uninstall-packages">Why am I unable to install, upgrade or uninstall packages?&lt;/h2>
&lt;p>The OSTree host installer needs the server URL or the server repository.&lt;/p>
&lt;p>When you perform the installation using the repo, the install packages are located under the layer package. When you install with the URL, the packages are located under the local packages.&lt;/p>
&lt;p>You can use the &lt;code>rpm-ostree uninstall&lt;/code> command to uninstall only the layered and local packages but not the base packages. To modify the base packages, you can use the &lt;code>rpm-ostree override&lt;/code> command.&lt;/p>
&lt;p>When you run &lt;code>rpm-ostree upgrade&lt;/code>, the command will only upgrade packages based on the commit available in the server.&lt;/p></description></item><item><title>Docs-V3: Host Updating Operations</title><link>/docs-v3/administration-guide/photon-rpm-ostree/host-updating-operations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs-v3/administration-guide/photon-rpm-ostree/host-updating-operations/</guid><description>
&lt;ul>
&lt;li>&lt;a href="#upgrade-overview">Upgrade Overview&lt;/a>&lt;/li>
&lt;li>&lt;a href="#incremental-upgrade">Incremental upgrade&lt;/a>&lt;/li>
&lt;li>&lt;a href="#listing-file-differences">Listing file differences&lt;/a>&lt;/li>
&lt;li>&lt;a href="#listing-package-differences">Listing package differences&lt;/a>&lt;/li>
&lt;li>&lt;a href="#rollback">Rollback&lt;/a>&lt;/li>
&lt;li>&lt;a href="#installing-packages">Installing Packages&lt;/a>&lt;/li>
&lt;li>&lt;a href="#uninstalling-packages">Uninstalling Packages&lt;/a>&lt;/li>
&lt;li>&lt;a href="#deleting-a-deployed-filetree">Deleting a deployed filetree&lt;/a>&lt;/li>
&lt;li>&lt;a href="#version-skipping-upgrade">Version skipping upgrade&lt;/a>&lt;/li>
&lt;li>&lt;a href="#tracking-parent-commits">Tracking parent commits&lt;/a>&lt;/li>
&lt;li>&lt;a href="#resetting-a-branch-to-a-previous-commit">Resetting a branch to a previous commit&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="upgrade-overview">Upgrade overview&lt;/h2>
&lt;p>If you&amp;rsquo;ve used yum, dnf (and now tdnf for Photon) in RPM systems or apt-get in Debian based Unix, you understand what &amp;ldquo;install&amp;rdquo; is for packages and the subtle difference between &amp;ldquo;update&amp;rdquo; and &amp;ldquo;upgrade&amp;rdquo;.&lt;/p>
&lt;p>OSTree and RPM-OSTree don&amp;rsquo;t distinguish between them and the term &amp;ldquo;upgrade&amp;rdquo; has a slightly different meaning - to bring the system in sync with the remote repo, to the top of the Refspec (branch), just like in Git, by pulling the latest changes.&lt;/p>
&lt;p>In fact, ostree and rpm-ostree commands support a single &amp;ldquo;upgrade&amp;rdquo; verb for a file image tree and a package list in the same refspec (branch). &lt;code>rpm-ostree upgrade&lt;/code> will install a package if it doesn&amp;rsquo;t exist, will not touch it if it has same version in the new image, will upgrade it if the version number is higher and it may actually downgrade it, if the package has been downgraded in the new image. I wish this operation had a different name, to avoid any confusion.&lt;/p>
&lt;p>The reverse operation of an upgrade is a &amp;ldquo;rollback&amp;rdquo; and fortunately it&amp;rsquo;s not named &amp;ldquo;downgrade&amp;rdquo; because it may upgrade packages in the last case describe above.&lt;/p>
&lt;p>As we&amp;rsquo;ll see in a future chapter, a jump to a different Refspec (branch) is also supported and it&amp;rsquo;s named &amp;ldquo;rebase&amp;rdquo;.&lt;/p>
&lt;h2 id="incremental-upgrade">Incremental upgrade&lt;/h2>
&lt;p>To check if there are any updates available, one would execute:&lt;/p>
&lt;pre>&lt;code>root@photon-host-def [ ~ ]# rpm-ostree upgrade
Updating from: photon:photon/3.0/x86_64/minimal
No upgrade available.
&lt;/code>&lt;/pre>&lt;p>It is good idea to check periodically for updates.&lt;/p>
&lt;p>To check if there are any new updates without actually applying them, we will pass the &amp;ndash;check-diff flag, that would list the different packages as added, modified or deleted - if such operations were to happen.&lt;/p>
&lt;pre>&lt;code>root@photon-host [ ~ ]# rpm-ostree upgrade --check-diff
Updating from: photon:photon/3.0/x86_64/minimal
8 metadata, 13 content objects fetched; 1026 KiB transferred in 0 seconds
+gawk-4.1.3-2.ph1.x86_64
+sudo-1.8.15-3.ph1.x86_64
+wget-1.17.1-2.ph1.x86_64
&lt;/code>&lt;/pre>&lt;p>We like what we see and now let&amp;rsquo;s upgrade for real. This command will deploy a new bootable filetree.&lt;/p>
&lt;pre>&lt;code>root@photon-host [ ~ ]# rpm-ostree upgrade
Receiving metadata objects: 134/(estimating) 14.1 MB/s 14.1 MB... done
Checking out tree c8f2b11... done
Enabled rpm-md repositories: repo photon-updates photon photon-extras
rpm-md repo 'repo' (cached); generated: 2019-09-18T05:26:00Z
rpm-md repo 'photon-updates' (cached); generated: 2019-09-11T00:02:44Z
rpm-md repo 'photon' (cached); generated: 2019-02-06T08:56:24Z
rpm-md repo 'photon-extras' (cached); generated: 2018-11-02T18:09:56Z
Importing rpm-md... done
Resolving dependencies... done
Checking out packages... done
Running pre scripts... done
Running post scripts... done
Writing rpmdb... done
Writing OSTree commit... done
Staging deployment... done
Freed: 20.7 MB (pkgcache branches: 0)
zlib 1.2.11-1.ph3 -&amp;gt; 1.2.11-2.ph3
Downgraded:
ostree 2019.2-15.ph3 -&amp;gt; 2019.2-2.ph3
ostree-grub2 2019.2-15.ph3 -&amp;gt; 2019.2-2.ph3
ostree-libs 2019.2-15.ph3 -&amp;gt; 2019.2-2.ph3
Removed:
chkconfig-1.9-1.ph3.x86_64
elasticsearch-6.7.0-2.ph3.x86_64
kibana-6.7.0-2.ph3.x86_64
logstash-6.7.0-2.ph3.x86_64
newt-0.52.20-1.ph3.x86_64
nodejs-10.15.2-1.ph3.x86_64
openjdk8-1.8.0.212-2.ph3.x86_64
openjre8-1.8.0.212-2.ph3.x86_64
ruby-2.5.3-2.ph3.x86_64
slang-2.3.2-1.ph3.x86_64
Added:
nss-3.44-2.ph3.x86_64
xmlsec1-1.2.26-2.ph3.x86_64
Run &amp;quot;systemctl reboot&amp;quot; to start a reboot
&lt;/code>&lt;/pre>&lt;p>By looking at the commit history, notice that the new commit has the original commit as parent.&lt;/p>
&lt;pre>&lt;code>root@photon-host [ ~ ]# ostree log photon/3.0/x86_64/minimal
commit c8f2b116b067d7695f9033bf2a99505198269354e157c0f2d5b78266cb874239
ContentChecksum: 9bc2079ad70df6dc9373752b254711f3413ae8a07628016c7de7f7d3fa505a6f
Date: 2019-09-18 08:22:15 +0000
Version: 3.0_minimal.2
(no subject)
commit 28dc49ecb4604c0bc349e4445adc659491a1874c01198e6253a261f4d59708b7
ContentChecksum: c3650c76e2bb0e9b6b063cda2dd55939c965c54fd0b0f5ce2cfb7e801403e610
Date: 2019-09-16 09:51:33 +0000
Version: 3.0_minimal.1
&lt;/code>&lt;/pre>&lt;p>Notice that now we have a new reference, that corresponds to the newly deployed image.&lt;/p>
&lt;pre>&lt;code>root@photon-host [ ~ ]# ostree refs
rpmostree/pkg/createrepo__c/0.11.1-2.ph3.x86__64
rpmostree/pkg/wget/1.20.3-1.ph3.x86__64
photon-1:photon/3.0/x86_64/minimal
rpmostree/base/0
rpmostree/base/1
ostree/0/0/0
ostree/0/0/1
ostree/0/0/2
rpmostree/pkg/rpm/4.14.2-4.ph3.x86__64
&lt;/code>&lt;/pre>&lt;p>Let us look at the status. The new filetree version .1 has the expected Commit ID and a newer timestamp, that is actually the server date/time when the image has been generated, not the time/date when it was downloaded or installed at the host. The old image has a star next to it, showing that&amp;rsquo;s the image the system is booted currently into.&lt;/p>
&lt;pre>&lt;code>root@photon-host [ ~ ]# rpm-ostree status
State: idle
AutomaticUpdates: disabled
Deployments:
ostree://photon-1:photon/3.0/x86_64/minimal
Version: 3.0_minimal.2 (2019-09-18T08:22:15Z)
BaseCommit: c8f2b116b067d7695f9033bf2a99505198269354e157c0f2d5b78266cb874239
Diff: 1 upgraded, 3 downgraded, 10 removed, 2 added
LayeredPackages: createrepo_c rpm wget
* ostree://photon-1:photon/3.0/x86_64/minimal
Version: 3.0_minimal.1 (2019-09-16T09:51:33Z)
BaseCommit: 28dc49ecb4604c0bc349e4445adc659491a1874c01198e6253a261f4d59708b7
LayeredPackages: createrepo_c rpm wget
ostree://photon:photon/3.0/x86_64/minimal
Version: 3.0_minimal.1 (2019-09-16T09:51:33Z)
BaseCommit: 28dc49ecb4604c0bc349e4445adc659491a1874c01198e6253a261f4d59708b7
LayeredPackages: createrepo_c rpm wget
&lt;/code>&lt;/pre>&lt;p>Now let&amp;rsquo;s type &amp;lsquo;reboot&amp;rsquo;. Grub will list the new filetree as the first image, marked with a star, as the default bootable image. If the keyboard is not touched and order is not changed, grub will timeout and will boot into that image.&lt;/p>
&lt;p>&lt;img src="../../../images/rpmostree-grub.png" alt="Grub-dual-boot-1-0">&lt;/p>
&lt;p>Let&amp;rsquo;s look again at the status. It&amp;rsquo;s identical, just that the star is next to the newer image, to show it&amp;rsquo;s the current image it has booted from.&lt;/p>
&lt;pre>&lt;code>root@photon-host [ ~ ]# rpm-ostree status
State: idle
AutomaticUpdates: disabled
Deployments:
* ostree://photon-1:photon/3.0/x86_64/minimal
Version: 3.0_minimal.2 (2019-09-18T08:22:15Z)
BaseCommit: c8f2b116b067d7695f9033bf2a99505198269354e157c0f2d5b78266cb874239
LayeredPackages: createrepo_c rpm wget
ostree://photon-1:photon/3.0/x86_64/minimal
Version: 3.0_minimal.1 (2019-09-16T09:51:33Z)
BaseCommit: 28dc49ecb4604c0bc349e4445adc659491a1874c01198e6253a261f4d59708b7
LayeredPackages: createrepo_c rpm wget
&lt;/code>&lt;/pre>&lt;p>Also, the current deployment directory is based on the new commit:&lt;/p>
&lt;pre>&lt;code>root@photon-host-def [ ~ ]# ostree admin config-diff --print-current-dir
/ostree/deploy/photon/deploy/63fd7a46dac6c169ee997039c229dd1d626f9b13eaf47b7a183f7a449eb4076f.0
&lt;/code>&lt;/pre>&lt;p>A fresh upgrade for a new version will delete the older, original image and bring a new one, that will become the new default image. The previous &amp;lsquo;default&amp;rsquo; image will move down one position as the backup image.&lt;/p>
&lt;h2 id="listing-file-differences">Listing file differences&lt;/h2>
&lt;p>Now we can look at what files have been &lt;strong>A&lt;/strong>dded, &lt;strong>M&lt;/strong>odified, &lt;strong>D&lt;/strong>eleted due to the addition of those three packages and switching of the boot directories, by comparing the two commits.&lt;/p>
&lt;pre>&lt;code>root@photon-host-def [ ~ ]# ostree diff 63fd 37e2
M /usr/etc/ld.so.cache
M /usr/lib/sysimage/rpm-ostree-base-db/Basenames
M /usr/lib/sysimage/rpm-ostree-base-db/Conflictname
M /usr/lib/sysimage/rpm-ostree-base-db/Dirnames
M /usr/lib/sysimage/rpm-ostree-base-db/Enhancename
M /usr/lib/sysimage/rpm-ostree-base-db/Filetriggername
M /usr/lib/sysimage/rpm-ostree-base-db/Group
M /usr/lib/sysimage/rpm-ostree-base-db/Installtid
M /usr/lib/sysimage/rpm-ostree-base-db/Name
M /usr/lib/sysimage/rpm-ostree-base-db/Obsoletename
M /usr/lib/sysimage/rpm-ostree-base-db/Packages
M /usr/lib/sysimage/rpm-ostree-base-db/Providename
M /usr/lib/sysimage/rpm-ostree-base-db/Recommendname
M /usr/lib/sysimage/rpm-ostree-base-db/Requirename
M /usr/lib/sysimage/rpm-ostree-base-db/Sha1header
M /usr/lib/sysimage/rpm-ostree-base-db/Sigmd5
M /usr/lib/sysimage/rpm-ostree-base-db/Suggestname
M /usr/lib/sysimage/rpm-ostree-base-db/Supplementname
M /usr/lib/sysimage/rpm-ostree-base-db/Transfiletriggername
M /usr/lib/sysimage/rpm-ostree-base-db/Triggername
M /usr/share/rpm/Basenames
M /usr/share/rpm/Conflictname
M /usr/share/rpm/Dirnames
M /usr/share/rpm/Enhancename
M /usr/share/rpm/Filetriggername
M /usr/share/rpm/Group
M /usr/share/rpm/Installtid
M /usr/share/rpm/Name
M /usr/share/rpm/Obsoletename
M /usr/share/rpm/Packages
M /usr/share/rpm/Providename
M /usr/share/rpm/Recommendname
M /usr/share/rpm/Requirename
M /usr/share/rpm/Sha1header
M /usr/share/rpm/Sigmd5
M /usr/share/rpm/Suggestname
M /usr/share/rpm/Supplementname
M /usr/share/rpm/Transfiletriggername
M /usr/share/rpm/Triggername
M /usr/share/rpm-ostree/treefile.json
D /usr/bin/certutil
D /usr/bin/nss-config
D /usr/bin/pk12util
D /usr/bin/xmlsec1
D /usr/lib/libfreebl3.chk
D /usr/lib/libfreebl3.so
D /usr/lib/libfreeblpriv3.chk
D /usr/lib/libgtest1.so
D /usr/lib/libgtestutil.so
D /usr/lib/libnssckbi.so
D /usr/lib/libnssdbm3.chk
D /usr/lib/libnssdbm3.so
D /usr/lib/libnsssysinit.so
D /usr/lib/libsmime3.so
D /usr/lib/libsoftokn3.chk
D /usr/lib/libssl3.so
D /usr/lib/libxmlsec1-nss.so
D /usr/lib/libxmlsec1-nss.so.1
D /usr/lib/libxmlsec1-nss.so.1.2.26
D /usr/lib/libxmlsec1-openssl.so
D /usr/lib/libxmlsec1-openssl.so.1
D /usr/lib/libxmlsec1-openssl.so.1.2.26
D /usr/lib/libxmlsec1.so
D /usr/lib/libxmlsec1.so.1
D /usr/lib/libxmlsec1.so.1.2.26
&lt;/code>&lt;/pre>&lt;h2 id="listing-package-differences">Listing package differences&lt;/h2>
&lt;p>We can also look at package differences, as you expect, using the right tool for the job.&lt;/p>
&lt;pre>&lt;code>root@photon-host-def [ ~ ]# rpm-ostree db diff 63fd 37e2
ostree diff commit old: rollback deployment (63fd7a46dac6c169ee997039c229dd1d626f9b13eaf47b7a183f7a449eb4076f)
ostree diff commit new: booted deployment (37e2ecfa34eb808962fdfed28623bbc457184bcd6bb788b79143d33e3569084f)
Removed:
nss-3.44-2.ph3.x86_64
xmlsec1-1.2.26-2.ph3.x86_64
&lt;/code>&lt;/pre>&lt;h2 id="rollback">Rollback&lt;/h2>
&lt;p>If we want to go back to the previous image, we can rollback. The order of the images will be changed, so the old filetree will become the default bootable image. If -r option is passed, the rollback will continue with a reboot.&lt;/p>
&lt;pre>&lt;code>root@photon-host-def [ ~ ]# rpm-ostree rollback
Moving 'e663b2872efa01d80e4c34c823431472beb653373af32de83c7d2480316b8a6a.0' to be first deployment
Transaction complete; bootconfig swap: yes; deployment count change: 0
Upgraded:
ostree 2019.2-2.ph3 -&amp;gt; 2019.2-15.ph3
ostree-grub2 2019.2-2.ph3 -&amp;gt; 2019.2-15.ph3
ostree-libs 2019.2-2.ph3 -&amp;gt; 2019.2-15.ph3
zlib 1.2.11-2.ph3 -&amp;gt; 1.2.11-1.ph3
Removed:
nss-3.44-2.ph3.x86_64
xmlsec1-1.2.26-2.ph3.x86_64
Added:
chkconfig-1.9-1.ph3.x86_64
elasticsearch-6.7.0-2.ph3.x86_64
kibana-6.7.0-2.ph3.x86_64
logstash-6.7.0-2.ph3.x86_64
newt-0.52.20-1.ph3.x86_64
nodejs-10.15.2-1.ph3.x86_64
openjdk8-1.8.0.212-2.ph3.x86_64
openjre8-1.8.0.212-2.ph3.x86_64
ruby-2.5.3-2.ph3.x86_64
slang-2.3.2-1.ph3.x86_64
Run &amp;quot;systemctl reboot&amp;quot; to start a reboot
&lt;/code>&lt;/pre>&lt;p>In fact, we can repeat the rollback operation as many times as we want before reboot. On each execution, it&amp;rsquo;s going to change the order. It will not delete any image.&lt;br>
However, an upgrade will keep the current default image and will eliminate the other image, whichever that is. So if Photon installation rolled back to an older build, an upgrade will keep that, eliminate the newer version and will replace it with an even newer version at the next upgrade.&lt;/p>
&lt;p>The boot order moved back to original:&lt;/p>
&lt;pre>&lt;code>root@photon-host-def [ ~ ]# rpm-ostree status
State: idle
AutomaticUpdates: disabled
Deployments:
* ostree://photon-2:photon/3.0/x86_64/minimal
Version: 3.0_minimal.3 (2019-09-18T12:48:03Z)
Commit: cf357c0f376decb3bae42326737db7e36bcf3568ab901c33dc57800c3718f07b
ostree://photon:photon/3.0/x86_64/minimal
Version: 3.0_minimal (2019-08-29T11:20:19Z)
Commit: a31a843985e314a9e70bcf09afe8d59f7351817d9fb743c2b6dab84f20833650
&lt;/code>&lt;/pre>&lt;p>The current bootable image path moved also back to the original value:&lt;/p>
&lt;pre>&lt;code>root@photon-host-def [ ~ ]# ostree admin config-diff --print-current-dir
/ostree/deploy/photon/deploy/47899767bdd4276266383fce13c4a26a51ca0304ae754609283d75f7d8aad36e.0
&lt;/code>&lt;/pre>&lt;h2 id="installing-packages">Installing Packages&lt;/h2>
&lt;p>You can add more packages onto the system that are not part of the commit composed on the server.&lt;/p>
&lt;pre>&lt;code>rpm-ostree install &amp;lt;packages&amp;gt;
&lt;/code>&lt;/pre>&lt;p>&lt;strong>Example&lt;/strong>:&lt;/p>
&lt;pre>&lt;code>rpm-ostree install https://kojipkgs.fedoraproject.org//packages/wget/1.19.5/5.fc29/x86_64/wget-1.19.5-5.fc29.x86_64.rpm
&lt;/code>&lt;/pre>&lt;h2 id="uninstalling-packages">Uninstalling Packages&lt;/h2>
&lt;p>To remove layered packages installed from a repository, use&lt;/p>
&lt;pre>&lt;code>rpm-ostree uninstall &amp;lt;pkg&amp;gt;
&lt;/code>&lt;/pre>&lt;p>To remove layered packages installed from a local package, you must specify the full NEVRA of the package.&lt;/p>
&lt;p>For example:&lt;/p>
&lt;pre>&lt;code>rpm-ostree uninstall ltrace-0.7.91-16.fc22.x86_64
&lt;/code>&lt;/pre>&lt;p>To uninstall a package that is a part of the base layer, use&lt;/p>
&lt;pre>&lt;code>rpm-ostree override remove &amp;lt;pkg&amp;gt;
&lt;/code>&lt;/pre>&lt;p>For example:&lt;/p>
&lt;pre>&lt;code>rpm-ostree override remove firefox
&lt;/code>&lt;/pre>&lt;h2 id="deleting-a-deployed-filetree">Deleting a deployed filetree&lt;/h2>
&lt;p>It is possible to delete a deployed tree. You won&amp;rsquo;t need to do that normally, as upgrading to a new image will delete the old one, but if for some reason deploying failed (loss of power, networking issues), you&amp;rsquo;ll want to delete the partially deployed image.&lt;br>
The only supported index is 1. (If multiple bootable images will be supported in the future, a larger than one, zero-based index of the image to delete will be supported).&lt;br>
You cannot delete the default bootable filetree, so passing 0 will result in an error.&lt;/p>
&lt;pre>&lt;code>root@photon-host-def [ ~ ]# ostree admin undeploy -v 1
OT: Using bootloader: OstreeBootloaderGrub2
Transaction complete; bootconfig swap: yes deployment count change: -1
Deleted deployment a31a843985e314a9e70bcf09afe8d59f7351817d9fb743c2b6dab84f20833650
root@photon-host-cus1 [ ~ ]# ostree admin undeploy -v 0
OT: Deployment cf357c0f376decb3bae42326737db7e36bcf3568ab901c33dc57800c3718f07b.0 unlocked=0
error: Cannot undeploy currently booted deployment 0
&lt;/code>&lt;/pre>&lt;p>Now, we can see that the newer image is gone, the deployment directory for commit a31a has been removed.&lt;/p>
&lt;pre>&lt;code>root@photon-host-def [ ~ ]# rpm-ostree status
State: idle
AutomaticUpdates: disabled
Deployments:
* ostree://photon-2:photon/3.0/x86_64/minimal
Version: 3.0_minimal.3 (2019-09-18T12:48:03Z)
Commit: cf357c0f376decb3bae42326737db7e36bcf3568ab901c33dc57800c3718f07b
root@photon-host-cus1 [ ~ ]# ls /ostree/deploy/photon/deploy/
cf357c0f376decb3bae42326737db7e36bcf3568ab901c33dc57800c3718f07b.0
cf357c0f376decb3bae42326737db7e36bcf3568ab901c33dc57800c3718f07b.0.origin
&lt;/code>&lt;/pre>&lt;p>However the commit is still there in the OSTree repo.&lt;/p>
&lt;pre>&lt;code>root@photon-host-def [ ~ ]# ostree log cf35
commit cf357c0f376decb3bae42326737db7e36bcf3568ab901c33dc57800c3718f07b
ContentChecksum: c24d108c7b7451374b474456a47f512e648833040bfbd4f43d862456bd6d5a18
Date: 2019-09-18 12:48:03 +0000
Version: 3.0_minimal.3
&lt;/code>&lt;/pre>&lt;p>But there is nothing to rollback to.&lt;/p>
&lt;pre>&lt;code>root@photon-host-def [ ~ ]# rpm-ostree rollback
error: Found 1 deployments, at least 2 required for rollback
&lt;/code>&lt;/pre>&lt;p>If we were to upgrade again, it would bring these packages back, but let&amp;rsquo;s just check the differeneces.&lt;/p>
&lt;pre>&lt;code>root@photon-host-def [ ~ ]# rpm-ostree upgrade --check-diff
Updating from: photon:photon/3.0/x86_64/minimal
+gawk-4.1.0-2.ph1.x86_64
+sudo-1.8.11p1-4.ph1.x86_64
+wget-1.15-1.ph1.x86_64
&lt;/code>&lt;/pre>&lt;h2 id="version-skipping-upgrade">Version skipping upgrade&lt;/h2>
&lt;p>Let&amp;rsquo;s assume that after a while, VMware releases version 2 that removes &lt;strong>sudo&lt;/strong> and adds &lt;strong>bison&lt;/strong> and &lt;strong>tar&lt;/strong>. Now, an upgrade will skip version 1 and go directly to 2. Let&amp;rsquo;s first look at what packages are pulled (notice sudo missing, as expected), then upgrade with reboot option.&lt;/p>
&lt;pre>&lt;code>root@photon-host-def [ ~ ]# rpm-ostree upgrade --check-diff
Updating from: photon:photon/3.0/x86_64/minimal
7 metadata, 13 content objects fetched; 1287 KiB transferred in 0 seconds
+bison-3.0.2-2.ph1.x86_64
+gawk-4.1.0-2.ph1.x86_64
+tar-1.27.1-1.ph1.x86_64
+wget-1.15-1.ph1.x86_64
root@photon-host-def [ ~ ]# rpm-ostree upgrade -r
Updating from: photon:photon/3.0/x86_64/minimal
107 metadata, 512 content objects fetched; 13064 KiB transferred in 1 seconds
Copying /etc changes: 5 modified, 0 removed, 16 added
Transaction complete; bootconfig swap: yes deployment count change: 1
Freed objects: 19.3 MB
&lt;/code>&lt;/pre>&lt;p>After reboot, let&amp;rsquo;s check the booting filetrees, the current dir for the current filetree and look at commit differences:&lt;/p>
&lt;pre>&lt;code>root@photon-host-def [ ~ ]# rpm-ostree status
State: idle
AutomaticUpdates: disabled
Deployments:
* ostree://photon-1:photon/3.0/x86_64/minimal
Version: 3.0_minimal.1 (2019-09-16T09:51:33Z)
BaseCommit: 28dc49ecb4604c0bc349e4445adc659491a1874c01198e6253a261f4d59708b7
LayeredPackages: createrepo_c rpm wget
ostree://photon:photon/3.0/x86_64/minimal
Version: 3.0_minimal.1 (2019-09-16T09:51:33Z)
BaseCommit: 28dc49ecb4604c0bc349e4445adc659491a1874c01198e6253a261f4d59708b7
LayeredPackages: createrepo_c rpm wget
&lt;/code>&lt;/pre>&lt;pre>&lt;code>root@photon-host-cus1 [ ~ ]# ostree admin config-diff --print-current-dir
/ostree/deploy/photon/deploy/e663b2872efa01d80e4c34c823431472beb653373af32de83c7d2480316b8a6a.0
root@photon-host-cus1 [ ~ ]# rpm-ostree db diff 8b4b e663
ostree diff commit old: rollback deployment (8b4b9d4ec033d1eb816711bfdda595d1013fecbe5cd340f6a619cdc9d83a3bf2)
ostree diff commit new: booted deployment (e663b2872efa01d80e4c34c823431472beb653373af32de83c7d2480316b8a6a)
root@photon-host-cus1 [ ~ ]# rpm-ostree db diff 82bc 092e
error: Refspec '82bc' not found
&lt;/code>&lt;/pre>&lt;p>Interesting fact: The metadata for commit 82bc has been removed from the local repo.&lt;/p>
&lt;h2 id="tracking-parent-commits">Tracking parent commits&lt;/h2>
&lt;p>OSTree will display limited commit history - maximum 2 levels, so if you want to traverse the history even though it may not find a commitment by its ID, you can refer to its parent using &amp;lsquo;^&amp;rsquo; suffix, grandfather via &amp;lsquo;^^&amp;rsquo; and so on. We know that 82bc is the parent of 092e:&lt;/p>
&lt;pre>&lt;code>root@photon-host-def [ ~ ]# rpm-ostree db diff 092e^ 092e
error: No such metadata object 82bca728eadb7292d568404484ad6889c3f6303600ca8c743a4336e0a10b3817.commit
error: Refspec '82cb' not found
root@photon-host-def [ ~ ]# rpm-ostree db diff 092e^^ 092e
error: No such metadata object 82bca728eadb7292d568404484ad6889c3f6303600ca8c743a4336e0a10b3817.commit
&lt;/code>&lt;/pre>&lt;p>So commit 092e knows who its parent is, but its metadata is no longer in the local repo, so it cannot traverse further to its parent to find an existing grandfather.&lt;/p>
&lt;h2 id="resetting-a-branch-to-a-previous-commit">Resetting a branch to a previous commit&lt;/h2>
&lt;p>We can reset the head of a branch in a local repo to a previous commit, for example corresponding to version 0 (3.0_minimal).&lt;/p>
&lt;pre>&lt;code>root@photon-host-def [ ~ ]# ostree reset photon:photon/3.0/x86_64/minimal cf35
&lt;/code>&lt;/pre>&lt;p>Now if we look again at the branch commit history, the head is at version 0.&lt;/p>
&lt;pre>&lt;code>root@photon-host-def [ ~ ]# ostree log photon/3.0/x86_64/minimal
commit cf357c0f376decb3bae42326737db7e36bcf3568ab901c33dc57800c3718f07b
ContentChecksum: c24d108c7b7451374b474456a47f512e648833040bfbd4f43d862456bd6d5a18
Date: 2019-09-18 12:48:03 +0000
Version: 3.0_minimal
&lt;/code>&lt;/pre></description></item><item><title>Docs-V3: Creating a Server</title><link>/docs-v3/administration-guide/photon-rpm-ostree/creating-a-rpm-ostree-server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs-v3/administration-guide/photon-rpm-ostree/creating-a-rpm-ostree-server/</guid><description>
&lt;p>Photon OS 3.0 includes a &lt;code>rpm-ostree-repo&lt;/code> package that can be installed on a VM.&lt;/p>
&lt;p>This package provides an automated script that creates a repo tree that acts as a server.&lt;/p>
&lt;p>Run the following commands to create a server:&lt;/p>
&lt;pre>&lt;code>tdnf install rpm-ostree-repo
&lt;/code>&lt;/pre>&lt;p>A script is created, which provides options to create a server.&lt;/p>
&lt;p>Script to create a Photon OSTree repo
Usage:
&lt;pre>&lt;code>/usr/bin/rpm-ostree-server/mkostreerepo -r=&amp;lt;repo path&amp;gt;
/usr/bin/rpm-ostree-server/mkostreerepo -r=&amp;lt;repo path&amp;gt; -p=&amp;lt;json treefile&amp;gt;
/usr/bin/rpm-ostree-server/mkostreerepo -c -r=&amp;lt;repo path&amp;gt; -p=&amp;lt;json treefile&amp;gt;
-r|--repopath &amp;lt;Provide repo path&amp;gt;
-p|--jsonfile &amp;lt;Provide Json file&amp;gt;
-c|--customrepo &amp;lt;Provide custom repo file inside repo path directory&amp;gt;
&lt;/code>&lt;/pre>&lt;p>&lt;strong>Note&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Use &lt;strong>PATH=$PATH:/usr/bin/rpm-ostree-server&lt;/strong> and then use &lt;strong>mkostreerepo&lt;/strong> from any directory for ease of use.&lt;/li>
&lt;li>&lt;strong>mkostreerepo&lt;/strong> is used to create the fresh tree for ostree.&lt;/li>
&lt;li>&lt;strong>mkostreerepo&lt;/strong> is also used to update a new commit to the existing tree.&lt;/li>
&lt;li>You can also use custom repo as to create/append the tree.&lt;/li>
&lt;/ul>
&lt;p>Run the following command to initiate the script, choose different help options to create a server.&lt;/p>
&lt;pre>&lt;code>mkostreerepo
&lt;/code>&lt;/pre>&lt;h2 id="manually-composing-your-ostree-repo">Manually Composing your OSTree repo&lt;/h2>
&lt;p>Use the following commands to initialize a new repo and to compose it.&lt;/p>
&lt;pre>&lt;code>root [ ~ ]# cd /srv/rpm-ostree
root [ /srv/rpm-ostree ]# ostree --repo=repo init --mode=archive-z2
root [ /srv/rpm-ostree ]# rpm-ostree compose tree --repo=repo photon-base.json
&lt;/code>&lt;/pre>&lt;p>You can now deploy a host. For more information, see &lt;a href="../file-oriented-server-operations/">File oriented server operations&lt;/a> and &lt;a href="../package-oriented-server-operations/">Package oriented server operations&lt;/a> to learn create your own customized file tree.&lt;/p></description></item><item><title>Docs-V3: Installing a Photon RPM-OStree host against a custom server repository</title><link>/docs-v3/administration-guide/photon-rpm-ostree/installing-a-host-against-custom-server-repository/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs-v3/administration-guide/photon-rpm-ostree/installing-a-host-against-custom-server-repository/</guid><description>
&lt;p>Organizations that maintain their own OSTree servers create custom image trees suited to their needs from which hosts can be deployed and upgraded. One single server may make available several branches to install, for example &amp;ldquo;base&amp;rdquo;, &amp;ldquo;minimal&amp;rdquo; and &amp;ldquo;full&amp;rdquo;. Or, if you think in terms of Windows OS SKUs - &amp;ldquo;Home&amp;rdquo;, &amp;ldquo;Professional&amp;rdquo; or &amp;ldquo;Enterprise&amp;rdquo; edition.&lt;/p>
&lt;p>So in fact there are two pieces of information the OSTree host installer needs - the server URL and the branch ref. Also, there are two ways to pass this info - manually via keyboard, when prompted and automated, by reading from a config file.&lt;/p>
&lt;h2 id="manual-install-of-a-custom-host">Manual install of a custom host&lt;/h2>
&lt;p>For Photon 1.0 or 1.0 Revision 2, installing a Photon RPM-OSTree host that will pull from a server repository of your choice is very similar to the way we installed the host against the default server repo in &lt;a href="../installing-a-host-against-default-server-repository/">Chapter 2&lt;/a>.&lt;/p>
&lt;p>We will follow the same steps, selecting &amp;ldquo;Photon OSTree Host&amp;rdquo;, and after assigning a host name like &lt;strong>photon-host&lt;/strong> and a root password, this time we will click on &amp;ldquo;Custom RPM-OSTree Server&amp;rdquo;.&lt;/p>
&lt;p>&lt;img src="../../../images/rpmostree-custom.png" alt="PhotonHostCustom">&lt;/p>
&lt;p>An additional screen will ask for the URL of server repo - just enter the IP address or fully qualified domain name of the &lt;a href="../creating-a-rpm-ostree-server/">server installed in the previous step&lt;/a>.&lt;/p>
&lt;p>&lt;img src="../../../images/rpmostree-url.png" alt="PhotonHostCustomURL">&lt;/p>
&lt;p>Once this is done and the installation finished, reboot and you are ready to use it.
You may verify - just like in &lt;a href="../concepts-in-action/#querying-the-deployed-filetrees">Chapter 3.1&lt;/a> - that you can get an rpm-ostree status. The value for the CommitID should be identical to the &lt;a href="../installing-a-host-against-default-server-repository/">host that installed from default repo&lt;/a>, if the &lt;a href="../creating-a-rpm-ostree-server/">server&lt;/a> has been installed fresh, from the same ISO.&lt;/p>
&lt;h2 id="automated-install-of-a-custom-host-via-kickstart">Automated install of a custom host via kickstart&lt;/h2>
&lt;p>Photon 3.0 supports automated install that will not interact with the user, in other words installer will display its progress, but will not prompt for any keys to be clicked, and will boot at the end of installation.&lt;/p>
&lt;p>If not familiar with the way kickstart works, visit &lt;a href="../../../user-guide/working-with-kickstart/">Kickstart Support in Photon OS&lt;/a>. The kickstart json config for OSTree is similar to minimal or full, except for these settings that should sound familiar:&lt;/p>
&lt;pre>&lt;code> ...
&amp;quot;type&amp;quot;: &amp;quot;ostree_host&amp;quot;,
&amp;quot;ostree_repo_url&amp;quot;: &amp;quot;http://192.168.218.249&amp;quot;,
&amp;quot;ostree_repo_ref&amp;quot;: &amp;quot;photon/3.0/x86_64/minimal&amp;quot;,
...
&lt;/code>&lt;/pre>&lt;p>Or, for default installation&lt;/p>
&lt;pre>&lt;code> ....
&amp;quot;type&amp;quot;: &amp;quot;ostree_host&amp;quot;,
&amp;quot;default_repo&amp;quot;: true,
....
&lt;/code>&lt;/pre>&lt;p>If the server is a future version of Photon OS, say Photon OS 4.0, and the administrator composed trees for the included json files, the ostree_repo_ref will take either value: &lt;strong>photon/4.0/x86_64/base&lt;/strong>, &lt;strong>photon/4.0/x86_64/minimal&lt;/strong>, or &lt;strong>photon/4.0/x86_64/full&lt;/strong>.&lt;/p>
&lt;p>In most situations, kickstart file is accessed via http from PXE boot. That enables booting from network and end to end install of hosts from pre-defined server URL and branch without assistance from user.&lt;/p></description></item><item><title>Docs-V3: Automatic Updates</title><link>/docs-v3/administration-guide/photon-rpm-ostree/automatic-updates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs-v3/administration-guide/photon-rpm-ostree/automatic-updates/</guid><description>
&lt;p>Automatic updates are disabled by default.&lt;/p>
&lt;p>To verify this, run the status command.&lt;/p>
&lt;pre>&lt;code>root@photon-host-def [ ~ ]# rpm-ostree status
State: idle
AutomaticUpdates: disabled
Deployments:
* ostree://photon-1:photon/3.0/x86_64/minimal
Version: 3.0_minimal.1 (2019-09-16T09:51:33Z)
BaseCommit: 28dc49ecb4604c0bc349e4445adc659491a1874c01198e6253a261f4d59708b7
LayeredPackages: createrepo_c rpm wget
&lt;/code>&lt;/pre>&lt;h2 id="enable-automatic-updates">Enable Automatic Updates&lt;/h2>
&lt;ol>
&lt;li>Run the following command:&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>$ systemctl restart rpm-ostreed
&lt;/code>&lt;/pre>&lt;ol>
&lt;li>
&lt;p>To enable automatic background updates, edit the &lt;code>/etc/rpm-ostreed.conf&lt;/code>, and include the below lines in the &lt;code>Daemon&lt;/code> section:&lt;/p>
&lt;pre>&lt;code>[Daemon]
AutomaticUpdatePolicy=stage
#IdleExitTimeout=60
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>Run the following commands:&lt;/p>
&lt;pre>&lt;code>$ systemctl reload rpm-ostreed
$ systemctl enable rpm-ostree-automatic.timer --now
$ systemctl restart rpm-ostree-automatic
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>Verify that the automatic update feature has been enabled:&lt;/p>
&lt;pre>&lt;code>$ rpm-ostree status -v
State: idle
AutomaticUpdates: stage; rpm-ostreed-automatic.timer: last run 16min ago
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>On the server machine, perform another commit on the base tree.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Automatic updates are now enabled and will automatically update the host system.&lt;/p></description></item><item><title>Docs-V3: File Oriented Server Operations</title><link>/docs-v3/administration-guide/photon-rpm-ostree/file-oriented-server-operations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs-v3/administration-guide/photon-rpm-ostree/file-oriented-server-operations/</guid><description>
&lt;p>In this section, we will checkout a filetree into a writable directory structure on disk, make several file changes and commit the changes back into the repository. Then we will download this commit and apply at the host. As you may have guessed, this chapter is mostly about OSTree - the base technology. I&amp;rsquo;ve not mentioned anything about packages, although it is quite possible to install packages (afler all, packages are made of files, right?) and commit without the help of rpm-ostree, but it&amp;rsquo;s too much of a headache and not worth the effort, since rpm-ostree does it simpler and better.&lt;/p>
&lt;p>When would you want to do that? When you want for all your hosts to get an application or configuration customization that is not encapsulated as part of a package upgrade.&lt;/p>
&lt;h2 id="starting-a-fresh-ostree-repo">Starting a fresh OSTree repo&lt;/h2>
&lt;p>If you want to start fresh with your own branch and/or versioning scheme, you can delete the OSTree repo created during the Photon 3.0 RPM-OSTree server install and re-create it empty.&lt;/p>
&lt;pre>&lt;code>root [ /srv/rpm-ostree ]# rm -rf repo/*
root [ /srv/rpm-ostree ]# ostree --repo=repo init --mode=archive-z2
root [ /srv/rpm-ostree ]# ls repo
config objects refs state tmp uncompressed-objects-cache
root [ /srv/rpm-ostree ]# cat repo/config
[core]
repo_version=1
mode=archive-z2
&lt;/code>&lt;/pre>&lt;h2 id="creating-summary-metadata">Creating summary metadata&lt;/h2>
&lt;p>A newer ostree feature, available in Photon OS 2.0 and higher, allows the OSTree server admin to create server summary metadata, that includes among other things the list of available branches and the list of static deltas, so they could be discovered by hosts. To create a summary, run this command after you committed for your branches:&lt;/p>
&lt;pre>&lt;code>root [ /srv/rpm-ostree ]# ostree summary -u &amp;quot;This is BigData's OSTree server, it has three branches&amp;quot;
&lt;/code>&lt;/pre>&lt;p>We will find out later how the &lt;a href="../remotes/#list-available-branches">hosts query for branches list&lt;/a>.&lt;/p></description></item><item><title>Docs-V3: Package Oriented Server Operations</title><link>/docs-v3/administration-guide/photon-rpm-ostree/package-oriented-server-operations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs-v3/administration-guide/photon-rpm-ostree/package-oriented-server-operations/</guid><description>
&lt;p>Now that we have a Photon RPM-OSTree server up and running (if not, see how to &lt;a href="../creating-a-rpm-ostree-server/">install&lt;/a>), we will learn how to provide the desired set of packages as input and instruct rpm-ostree to compose a filetree, that will result in creation (or update) of an OSTree repo.&lt;br>
The simplest way to explain is to take a look at the files installed by the Photon RPM-OSTree server during setup.&lt;/p>
&lt;pre>&lt;code>root [ ~ ]# cd /srv/rpm-ostree/
root [ /srv/rpm-ostree ]# ls -l
total 16
lrwxrwxrwx 1 root root 31 Aug 28 19:06 lightwave-ostree.repo -&amp;gt; /etc/yum.repos.d/lightwave.repo
-rw-r--r-- 1 root root 7356 Aug 28 19:06 ostree-httpd.conf
-rw-r--r-- 1 root root 1085 Aug 28 19:06 photon-base.json
lrwxrwxrwx 1 root root 35 Aug 28 19:06 photon-extras-ostree.repo -&amp;gt; /etc/yum.repos.d/photon-extras.repo
lrwxrwxrwx 1 root root 32 Aug 28 19:06 photon-iso-ostree.repo -&amp;gt; /etc/yum.repos.d/photon-iso.repo
lrwxrwxrwx 1 root root 28 Aug 28 19:06 photon-ostree.repo -&amp;gt; /etc/yum.repos.d/photon.repo
lrwxrwxrwx 1 root root 36 Aug 28 19:06 photon-updates-ostree.repo -&amp;gt; /etc/yum.repos.d/photon-updates.repo
drwxr-xr-x 7 root root 4096 Aug 20 22:27 repo
&lt;/code>&lt;/pre>&lt;h2 id="json-configuration-file">JSON configuration file&lt;/h2>
&lt;p>How can we tell rpm-ostree what packages we want to include, where to get them from and how to compose the filetree? There is JSON file for that. Let&amp;rsquo;s take a look at photon-base.json used by the Photon OS team.&lt;/p>
&lt;pre>&lt;code>root [ /srv/rpm-ostree ]# cat photon-base.json
{
&amp;quot;comment&amp;quot;: &amp;quot;Photon Minimal OSTree&amp;quot;,
&amp;quot;osname&amp;quot;: &amp;quot;photon&amp;quot;,
&amp;quot;ref&amp;quot;: &amp;quot;photon/3.0/x86_64/minimal&amp;quot;,
&amp;quot;automatic_version_prefix&amp;quot;: &amp;quot;3.0_minimal&amp;quot;,
&amp;quot;repos&amp;quot;: [&amp;quot;photon&amp;quot;],
&amp;quot;selinux&amp;quot;: false,
&amp;quot;initramfs-args&amp;quot;: [&amp;quot;--no-hostonly&amp;quot;],
&amp;quot;bootstrap_packages&amp;quot;: [&amp;quot;filesystem&amp;quot;],
&amp;quot;documentation&amp;quot;: false,
&amp;quot;packages&amp;quot;: [&amp;quot;glibc&amp;quot;, &amp;quot;zlib&amp;quot;, &amp;quot;binutils&amp;quot;, &amp;quot;gmp&amp;quot;, &amp;quot;mpfr&amp;quot;, &amp;quot;libgcc&amp;quot;, &amp;quot;libstdc++&amp;quot;,&amp;quot;libgomp&amp;quot;,
&amp;quot;pkg-config&amp;quot;, &amp;quot;ncurses&amp;quot;, &amp;quot;bash&amp;quot;, &amp;quot;bzip2&amp;quot;, &amp;quot;cracklib&amp;quot;, &amp;quot;cracklib-dicts&amp;quot;, &amp;quot;shadow&amp;quot;,
&amp;quot;procps-ng&amp;quot;, &amp;quot;iana-etc&amp;quot;, &amp;quot;readline&amp;quot;, &amp;quot;coreutils&amp;quot;, &amp;quot;bc&amp;quot;, &amp;quot;libtool&amp;quot;, &amp;quot;net-tools&amp;quot;,
&amp;quot;findutils&amp;quot;, &amp;quot;xz&amp;quot;, &amp;quot;grub2&amp;quot;, &amp;quot;grub2-pc&amp;quot;, &amp;quot;grub2-efi&amp;quot;, &amp;quot;iproute2&amp;quot;, &amp;quot;util-linux&amp;quot;, &amp;quot;linux&amp;quot;,
&amp;quot;attr&amp;quot;, &amp;quot;libcap&amp;quot;, &amp;quot;kmod&amp;quot;, &amp;quot;expat&amp;quot;, &amp;quot;dbus&amp;quot;, &amp;quot;file&amp;quot;,
&amp;quot;sed&amp;quot;, &amp;quot;grep&amp;quot;, &amp;quot;cpio&amp;quot;, &amp;quot;gzip&amp;quot;,
&amp;quot;openssl&amp;quot;, &amp;quot;ca-certificates&amp;quot;, &amp;quot;curl&amp;quot;,
&amp;quot;systemd&amp;quot;,
&amp;quot;openssh&amp;quot;, &amp;quot;iptables&amp;quot;,
&amp;quot;photon-release&amp;quot;,
&amp;quot;vim&amp;quot;, &amp;quot;photon-repos&amp;quot;,
&amp;quot;docker&amp;quot;, &amp;quot;bridge-utils&amp;quot;,
&amp;quot;dracut&amp;quot;, &amp;quot;dracut-tools&amp;quot;, &amp;quot;rpm-ostree&amp;quot;, &amp;quot;nss-altfiles&amp;quot;, &amp;quot;which&amp;quot;]
}
&lt;/code>&lt;/pre>&lt;p>There are some mandatory settings, some optional. I&amp;rsquo;m only going to explain the most important ones for our use case.
&lt;strong>osname&lt;/strong> and &lt;strong>ref&lt;/strong> should be familiar, they have been explained in previous sections &lt;a href="../concepts-in-action/#osname">OSname&lt;/a> and &lt;a href="../concepts-in-action#refspec">Refspec&lt;/a>. Basicaly, we are asking &lt;code>rpm-ostree&lt;/code> to compose a tree for photon OS and photon/3.0/x86_64/minimal branch.&lt;/p>
&lt;p>For more information, see the &lt;a href="https://coreos.github.io/rpm-ostree/treefile/">OS Tree Documentation&lt;/a>.&lt;/p>
&lt;h2 id="package-addition-removal-upgrade">Package addition, removal, upgrade&lt;/h2>
&lt;p>&lt;strong>packages&lt;/strong> is the list of packages that are to be added, in this case, in the &amp;ldquo;minimal&amp;rdquo; installation profile, on top of the packages already included by default. This is not quite the identical set of RPMS you get when you select the minimal profile in the ISO installer, but it&amp;rsquo;s pretty close and that&amp;rsquo;s why it&amp;rsquo;s been named the same.
Let&amp;rsquo;s add to the list three new packages: gawk, sudo and wget using &lt;code>vim photon-base.json&lt;/code>&lt;/p>
&lt;p>&lt;strong>!!!Warning: do not remove any packages from the default list, even an &amp;ldquo;innocent&amp;rdquo; one, as it may bring the system to an unstable condition. During my testing, I&amp;rsquo;ve removed &amp;ldquo;which&amp;rdquo;; it turns out it was used to figure out the grub booting roots: on reboot, the system was left hanging at grub prompt.&lt;/strong>&lt;/p>
&lt;h2 id="rpms-repository">RPMS repository&lt;/h2>
&lt;p>But where are these packages located? RPM-OStree uses the same standard RPMS repositories, that yum installs from.&lt;/p>
&lt;pre>&lt;code>root [ /srv/rpm-ostree ]# ls /etc/yum.repos.d/
photon-debuginfo.repo photon-extras.repo photon-iso.repo photon-updates.repo photon.repo
&lt;/code>&lt;/pre>&lt;p>Going back to our JSON file, &lt;strong>repos&lt;/strong> is a multi-value setting that tells RPM-OSTree in what RPMS repositories to look for packages. In this case, it looks in the current directory for a &amp;ldquo;photon&amp;rdquo; repo configuration file, that is a .repo file starting with a [photon] section. There is such a file: &lt;strong>photon-ostree.repo&lt;/strong>, that is in fact a link to &lt;strong>photon.repo&lt;/strong> in /etc/yum.repos.d directory.&lt;/p>
&lt;pre>&lt;code>root [ /srv/rpm-ostree ]# cat /etc/yum.repos.d/photon.repo
[photon]
name=VMware Photon Linux 3.0(x86_64)
baseurl=https://dl.bintray.com/vmware/photon_release_$releasever_$basearch
gpgkey=file:///etc/pki/rpm-gpg/VMWARE-RPM-GPG-KEY
gpgcheck=1
enabled=1
skip_if_unavailable=True
&lt;/code>&lt;/pre>&lt;p>In this case, &lt;code>rpm-ostree&lt;/code> is instructed to download its packages in RPM format from the bintray URL, that is the location of an online RPMS repo maintained by the WMware Photon OS team. To make sure those packages are genuine, signed by VMware, the signature is checked against the official VMware public key.&lt;/p>
&lt;p>So what&amp;rsquo;s in an RPMS repository? If we point the browser to &lt;a href="https://dl.bintray.com/vmware/photon_release_3.0_x86_64,">https://dl.bintray.com/vmware/photon_release_3.0_x86_64,&lt;/a> we can see there are three top directories:&lt;/p>
&lt;ul>
&lt;li>noarch - where all packages that don&amp;rsquo;t depend on the architecture reside. Those may contain scripts, platform neutral source files, configuration.&lt;/li>
&lt;li>x86_64 - platform dependent packages for Intel 32 and 64 bits CPUs.&lt;/li>
&lt;li>repodata - internal repo management data, like a catalog of all packages, and for every package its name, id, version, architecture and full path file/directory list. There is also a compressed XML file containing the history of changelogs extracted from github, as packages in RPM format were built by Photon OS team members from sources.&lt;/li>
&lt;/ul>
&lt;p>Fortunately, in order to compose a tree, you don&amp;rsquo;t need to download the packages from the online repository (which is time consuming - in the order of minutes), unless there are some new ones or updated versions of them, added by the Photon team after shipping 1.0 version or the 1.0 Refresh. A copy of the starter RPMS repository (as of 1.0 shipping date) has been included on the CD-ROM and you can access it.&lt;/p>
&lt;pre>&lt;code>root [ /srv/rpm-ostree ]# mount /dev/cdrom
root [ /srv/rpm-ostree ]# ls /mnt/cdrom/RPMS
noarch repodata x86_64
&lt;/code>&lt;/pre>&lt;p>All you have to do now is to replace the &lt;code>&amp;quot;repos&amp;quot;: [&amp;quot;photon&amp;quot;]&lt;/code> entry by &lt;code>&amp;quot;repos&amp;quot;: [&amp;quot;photon-iso&amp;quot;]&lt;/code>, which will point to the RPMS repo on CD-ROM, rather than the online repo. This way, composing saves time, bandwidth and reduces to zero the risk of failure because of a networking issue.&lt;/p>
&lt;pre>&lt;code>root [ /srv/rpm-ostree ]# cat /etc/yum.repos.d/photon-iso.repo
[photon-iso]
name=VMWare Photon Linux ISO 3.0(x86_64)
baseurl=file:///mnt/cdrom/RPMS
gpgkey=file:///etc/pki/rpm-gpg/VMWARE-RPM-GPG-KEY
gpgcheck=1
enabled=0
skip_if_unavailable=True
&lt;/code>&lt;/pre>&lt;p>There are already in current directory links created to all repositories in /etc/yum.repos.d, so they are found when tree compose command is invoked. You may add any other repo to the list and include packages found in that repo to be part of the image.&lt;/p>
&lt;h2 id="composing-a-tree">Composing a tree&lt;/h2>
&lt;p>After so much preparation, we can execute a tree compose. We have only added 3 new packages and changed the RPMS repo source. Assuming that the JSON file is editted, run the following:&lt;/p>
&lt;pre>&lt;code>root [ /srv/rpm-ostree ]# rpm-ostree compose tree --repo=repo photon-base.json
Previous commit: 2940e10c4d90ce6da572cbaeeff7b511cab4a64c280bd5969333dd2fca57cfa8
Downloading metadata [=========================================================================] 100%
Transaction: 117 packages
Linux-PAM-1.1.8-2.ph3.x86_64
attr-2.4.47-1.ph3.x86_64
...
gawk-4.1.0-2.ph3.x86_64
...
sudo-1.8.11p1-4.ph3.x86_64
...
wget-1.15-1.ph3.x86_64
which-2.20-1.ph3.x86_64
xz-5.0.5-2.ph3.x86_64
zlib-1.2.8-2.ph3.x86_64
Installing packages [==========================================================================] 100%
Writing '/var/tmp/rpm-ostree.TVO089/rootfs.tmp/usr/share/rpm-ostree/treefile.json'
Preparing kernel
Creating empty machine-id
Executing: /usr/bin/dracut -v --tmpdir=/tmp -f /var/tmp/initramfs.img 4.0.9 --no-hostonly
...
*** Including module: bash ***
*** Including module: kernel-modules ***
*** Including module: resume ***
*** Including module: rootfs-block ***
*** Including module: terminfo ***
*** Including module: udev-rules ***
Skipping udev rule: 91-permissions.rules
Skipping udev rule: 80-drivers-modprobe.rules
*** Including module: ostree ***
*** Including module: systemd ***
*** Including module: usrmount ***
*** Including module: base ***
/etc/os-release: line 1: Photon: command not found
*** Including module: fs-lib ***
*** Including module: shutdown ***
*** Including modules done ***
*** Installing kernel module dependencies and firmware ***
*** Installing kernel module dependencies and firmware done ***
*** Resolving executable dependencies ***
*** Resolving executable dependencies done***
*** Stripping files ***
*** Stripping files done ***
*** Store current command line parameters ***
*** Creating image file ***
*** Creating image file done ***
Image: /var/tmp/initramfs.img: 11M
========================================================================
Version: dracut-041-1.ph3
Arguments: -v --tmpdir '/tmp' -f --no-hostonly
dracut modules:
bash
kernel-modules
resume
rootfs-block
terminfo
udev-rules
ostree
systemd
usrmount
base
fs-lib
shutdown
========================================================================
drwxr-xr-x 12 root root 0 Sep 1 00:52 .
crw-r--r-- 1 root root 5, 1 Sep 1 00:52 dev/console
crw-r--r-- 1 root root 1, 11 Sep 1 00:52 dev/kmsg
... (long list of files removed)
========================================================================
Initializing rootfs
Migrating /etc/passwd to /usr/lib/
Migrating /etc/group to /usr/lib/
Moving /usr to target
Linking /usr/local -&amp;gt; ../var/usrlocal
Moving /etc to /usr/etc
Placing RPM db in /usr/share/rpm
Ignoring non-directory/non-symlink '/var/tmp/rpm-ostree.TVO089/rootfs.tmp/var/lib/nss_db/Makefile'
Ignoring non-directory/non-symlink '/var/tmp/rpm-ostree.TVO089/rootfs.tmp/var/cache/ldconfig/aux-cache'
Ignoring non-directory/non-symlink '/var/tmp/rpm-ostree.TVO089/rootfs.tmp/var/log/btmp'
Ignoring non-directory/non-symlink '/var/tmp/rpm-ostree.TVO089/rootfs.tmp/var/log/lastlog'
Ignoring non-directory/non-symlink '/var/tmp/rpm-ostree.TVO089/rootfs.tmp/var/log/wtmp'
Moving /boot
Using boot location: both
Copying toplevel compat symlinks
Adding tmpfiles-ostree-integration.conf
Committing '/var/tmp/rpm-ostree.TVO089/rootfs.tmp' ...
photon/1.0/x86_64/minimal =&amp;gt; c505f4bddb4381e8b5213682465f1e5bb150a18228aa207d763cea45c6a81bbe
&lt;/code>&lt;/pre>&lt;p>I&amp;rsquo;ve cut a big part of logging, but as you can see, the new filetree adds to the top of the previous (initial) commit 2940e10c4d and produces a new commit c505f4bddb. Our packages gawk-4.1.0-2.ph3.x86_64, sudo-1.8.11p1-4.ph3.x86_64 and wget-1.15-1.ph3.x86_64 have been added.&lt;/p>
&lt;p>During compose, &lt;code>rpm-ostree&lt;/code> checks out the file tree into its uncompressed form, applies the package changes, places the updated RPM repo into /usr/share/rpm and calls &lt;code>ostree&lt;/code> to commit its changes back into the OSTree repo. If we were to look at the temp directory during this time:&lt;/p>
&lt;pre>&lt;code>root [ /srv/rpm-ostree ]# ls /var/tmp/rpm-ostree.TVO089/rootfs.tmp
bin dev lib media opt proc run srv sysroot usr
boot home lib64 mnt ostree root sbin sys tmp var
&lt;/code>&lt;/pre>&lt;p>If we repeat the command, and there is no change in the JSON file settings and no change in metadata, rpm-ostree will figure out that nothing has changed and stop. You can force however to redo the whole composition.&lt;/p>
&lt;pre>&lt;code>root [ /srv/rpm-ostree ]# rpm-ostree compose tree --repo=repo photon-base.json
Previous commit: c505f4bddb4381e8b5213682465f1e5bb150a18228aa207d763cea45c6a81bbe
Downloading metadata [=========================================================================] 100%
No apparent changes since previous commit; use --force-nocache to override
&lt;/code>&lt;/pre>&lt;p>This takes several minutes. Then why is the RPM-OSTree server installing so fast, in 45 seconds on my SSD? The server doesn&amp;rsquo;t compose the tree, it uses a pre-created OSTree repo that is stored on the CD-ROM. It comes of course at the expense of larger CD-ROM size. This OSTree repo is created from the same set of RPMS on the CD-ROM, so if you compose fresh, you will get the same exact tree, with same commit ID for the &amp;ldquo;minimal&amp;rdquo; ref.&lt;/p>
&lt;h2 id="automatic-version-prefix">Automatic version prefix&lt;/h2>
&lt;p>If you recall the filetree version explained earlier, this is where it comes into play. When a tree is composed from scratch, the first version (0) associated to the initial commit is going to get that human readable value. Any subsequent compose operation will auto-increment to .1, .2, .3 and so on.&lt;br>
It&amp;rsquo;s a good idea to start a versionning scheme of your own, so that your customized Photon builds that may get different packages of your choice don&amp;rsquo;t get the same version numbers as the official Photon team builds, coming from VMware&amp;rsquo;s bintray OSTree repository. There is no conflict, it&amp;rsquo;s just confusing to have same name for different commits coming from different repos,&lt;br>
So if you work for a company named Big Data Inc., you may want to switch to a new versioning scheme &lt;code>&amp;quot;automatic_version_prefix&amp;quot;: &amp;quot;1.0_bigdata&amp;quot;&lt;/code>.&lt;/p>
&lt;h2 id="installing-package-updates">Installing package updates&lt;/h2>
&lt;p>If you want to provide hosts with the package updates that VMware periodically releases, all that you need to do is to add the photon-updates.repo to the list of repos in photon-base.json and then re-compose the usual way.&lt;/p>
&lt;pre>&lt;code>&amp;quot;repos&amp;quot;: [&amp;quot;photon&amp;quot;, &amp;quot;photon-updates&amp;quot;],
&lt;/code>&lt;/pre>&lt;p>Even though you may have not modified the &amp;ldquo;packages&amp;rdquo; section in the json file, the newer versions of existing packages will be included in the new image and then downloaded by the host the usual way. Note that upgrading a package shows differently than adding (+) or removing (-). You may still see packages added (or removed) though because they are new dependencies (or no longer dependencies) for the newer versions of other packages, as libssh2 in the example below.&lt;/p>
&lt;pre>&lt;code>root [ ~ ]# rpm-ostree upgrade --check-diff
Updating from: photon:photon/3.0/x86_64/minimal
8 metadata, 13 content objects fetched; 1002 KiB transferred in 0 seconds
!bridge-utils-1.5-2.ph3.x86_64
=bridge-utils-1.5-3.ph3.x86_64
!bzip2-1.0.6-5.ph3.x86_64
=bzip2-1.0.6-6.ph3.x86_64
!curl-7.47.1-2.ph3.x86_64
=curl-7.51.0-2.ph3.x86_64
!docker-1.11.0-5.ph3.x86_64
=docker-1.12.1-1.ph3.x86_64
...
+libssh2-1.8.0-1.ph3.x86_64
...
root [ ~ ]# rpm-ostree upgrade
Updating from: photon:photon/1.0/x86_64/minimal
258 metadata, 1165 content objects fetched; 76893 KiB transferred in 8 seconds
Copying /etc changes: 6 modified, 0 removed, 14 added
Transaction complete; bootconfig swap: yes deployment count change: 1
Changed:
bridge-utils 1.5-2.ph3 -&amp;gt; 1.5-3.ph3
bzip2 1.0.6-5.ph3 -&amp;gt; 1.0.6-6.ph3
curl 7.47.1-2.ph3 -&amp;gt; 7.51.0-2.ph3
docker 1.11.0-5.ph3 -&amp;gt; 1.12.1-1.ph3
...
Added:
libssh2-1.8.0-1.ph3.x86_64
Upgrade prepared for next boot; run &amp;quot;systemctl reboot&amp;quot; to start a reboot
&lt;/code>&lt;/pre>&lt;p>Now if we want to see what packages have been updated and what issues have been fixed, just run at the host the command that we learned about in chapter 5.4.&lt;/p>
&lt;pre>&lt;code>root [ ~ ]# rpm-ostree db diff 56ef 396e
ostree diff commit old: 56e (56ef687f1319604b7900a232715718d26ca407de7e1dc89251b206f8e255dcb4)
ostree diff commit new: 396 (396e1116ad94692b8c105edaee4fa12447ec3d8f73c7b3ade4e955163d517497)
Upgraded:
bridge-utils-1.5-3.ph3.x86_64
* Mon Sep 12 2016 Alexey Makhalov &amp;lt;amakhalov@vmware.com&amp;gt; 1.5-3
- Update patch to fix-2.
bzip2-1.0.6-6.ph3.x86_64
* Fri Oct 21 2016 Kumar Kaushik &amp;lt;kaushikk@vmware.com&amp;gt; 1.0.6-6
- Fixing security bug CVE-2016-3189.
curl-7.51.0-2.ph3.x86_64
* Wed Nov 30 2016 Xiaolin Li &amp;lt;xiaolinl@vmware.com&amp;gt; 7.51.0-2
- Enable sftp support.
* Wed Nov 02 2016 Anish Swaminathan &amp;lt;anishs@vmware.com&amp;gt; 7.51.0-1
- Upgrade curl to 7.51.0
* Thu Oct 27 2016 Anish Swaminathan &amp;lt;anishs@vmware.com&amp;gt; 7.47.1-4
- Patch for CVE-2016-5421
* Mon Sep 19 2016 Xiaolin Li &amp;lt;xiaolinl@vmware.com&amp;gt; 7.47.1-3
- Applied CVE-2016-7167.patch.
docker-1.12.1-1.ph3.x86_64
* Wed Sep 21 2016 Xiaolin Li &amp;lt;xiaolinl@vmware.com&amp;gt; 1.12.1-1
- Upgraded to version 1.12.1
* Mon Aug 22 2016 Alexey Makhalov &amp;lt;amakhalov@vmware.com&amp;gt; 1.12.0-2
- Added bash completion file
* Tue Aug 09 2016 Anish Swaminathan &amp;lt;anishs@vmware.com&amp;gt; 1.12.0-1
- Upgraded to version 1.12.0
* Tue Jun 28 2016 Anish Swaminathan &amp;lt;anishs@vmware.com&amp;gt; 1.11.2-1
- Upgraded to version 1.11.2
...
Added:
libssh2-1.8.0-1.ph3.x86_64
&lt;/code>&lt;/pre>&lt;h2 id="composing-for-a-different-branch">Composing for a different branch&lt;/h2>
&lt;p>RPM-OSTree makes it very easy to create and update new branches, by composing using json config files that include the Refspec as the new branch name, the list of packages and the other settings we are now familiar with. Photon OS 2.0 RPM-OSTRee Server installer adds two extra files photon-minimal.json and photon-full.json in addition to photon-base.json, that correspond almost identically to the minimal and full profiles installed via tdnf. It also makes &amp;lsquo;photon-base&amp;rsquo; a smaller set of starter branch.&lt;/p>
&lt;p>Of course, you can create your own config files for your branches with desired lists of packages. You may compose on top of the existing tree, or you can &lt;a href="../file-oriented-server-operations/#starting-a-fresh-ostree-repo">start fresh your own OSTRee repo&lt;/a>, using your own customized versioning.&lt;/p></description></item><item><title>Docs-V3: Remotes</title><link>/docs-v3/administration-guide/photon-rpm-ostree/remotes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs-v3/administration-guide/photon-rpm-ostree/remotes/</guid><description>
&lt;p>In Chapter 3 we talked about the Refspec that contains a &lt;strong>photon:&lt;/strong> prefix, that is the name of a remote. When a Photon host is installed, a remote is added - which contains the URL for an OSTree repository that is the origin of the commits we are going to pull from and deploy filetrees, in our case the Photon RPM-OSTree server we installed the host from. This remote is named &lt;strong>photon&lt;/strong>, which may be confusing, because it&amp;rsquo;s also the OS name and part of the Refspec (branch) path.&lt;/p>
&lt;h2 id="listing-remotes">Listing remotes&lt;/h2>
&lt;p>A host repo can be configured to switch between multiple remotes to pull from, however only one remote is the &amp;ldquo;active&amp;rdquo; one at a time. We can list the remotes created so far, which brings back the expected result.&lt;/p>
&lt;pre>&lt;code>root@photon-host-def [ ~ ]# ostree remote list
photon
photon-1
&lt;/code>&lt;/pre>&lt;p>We can inquiry about the URL for that remote name, which for the default host is the expected Photon OS online OSTree repo.&lt;/p>
&lt;pre>&lt;code>root@photon-host-def [ ~ ]# ostree remote show-url photon
https://&amp;lt;host-name&amp;gt;:8080/repo
&lt;/code>&lt;/pre>&lt;p>But where is this information stored? The repo&amp;rsquo;s config file has it.&lt;/p>
&lt;pre>&lt;code>root@photon-host-def [ ~ ]# cat /ostree/repo/config
[core]
repo_version=1
mode=bare
[remote &amp;quot;photon&amp;quot;]
url=http:&amp;lt;Server-IP-Address:port&amp;gt;/repo
gpg-verify=false
&lt;/code>&lt;/pre>&lt;p>If same command is executed on the custom host we&amp;rsquo;ve installed, it&amp;rsquo;s going to reveal the URL of the Photon RPM-OSTree server connected to during setup.&lt;/p>
&lt;pre>&lt;code>root@photon-host-cus [ ~ ]# ostree remote show-url photon
http://10.197.103.175:8000/repo
&lt;/code>&lt;/pre>&lt;h2 id="gpg-signature-verification">GPG signature verification&lt;/h2>
&lt;p>You may wonder what is the purpose of &lt;code>gpg-verify=false&lt;/code> in the config file, associated with the specific remote. This will instruct any host update to skip the signing verification for the updates that come from server, resulted from tree composed locally at the server, as they are not signed. Without this, host updating will fail.&lt;/p>
&lt;p>There is a whole chapter about signing, importing keys and so on that I will not get into, but the idea is that signing adds an extra layer of security, by validating that everything you download comes from the trusted publisher and has not been altered. That is the case for all Photon OS artifacts downloaded from VMware official site. All OVAs and packages, either from the online RPMS repositories or included in the ISO file - are signed by VMware. We&amp;rsquo;ve seen a similar setting &lt;code>gpgcheck=1&lt;/code> in the RPMS repo configuration files that tdnf uses to validate or not the signature for all packages downloaded to be installed.&lt;/p>
&lt;h2 id="switching-repositories">Switching repositories&lt;/h2>
&lt;p>Since mapping name/url is stored in the repo&amp;rsquo;s config file, in principle you can re-assign a different URL, connecting the host to a different server. The next upgrade will get the latest commit chain from the new server.&lt;br>
If we edit photon-host-def&amp;rsquo;s repo config and replace the bintray URL by photon-srv1&amp;rsquo;s IP address, all original packages in the original 3.0_minimal version will be preserved, but any new package change (addition, removal, upgrade) added after that (in 3.0_minimal.1, 3.0_minimal.2) will be reverted and all new commits from photon-srv1 (that may have same version) will be applied. This is because the two repos are identical copies, so they have the same original commit ID as a common ancestor, but they diverge from there.&lt;/p>
&lt;p>If the old and new repo have nothing in common (no common ancestor commit), this will undo even the original commit, so all commits from the new tree will be applied.&lt;br>
A better solution would be to add a new remote that will identify where the commits come from.&lt;/p>
&lt;h2 id="adding-and-removing-remotes">Adding and removing remotes&lt;/h2>
&lt;p>A cleaner way to switch repositories is to add remotes that point to different servers. Let us add another server that we will refer to as &lt;strong>photon2&lt;/strong>, along with (optional) the refspecs for branches that it provides (we will see later that in the newer OSTree versions, we don&amp;rsquo;t need to know the branch names, they could be &lt;a href="#list-available-branches">queried at run-time&lt;/a>).&lt;/p>
&lt;pre>&lt;code>root@photon-host-cus [ ~ ]# ostree remote add --repo=/ostree/repo -v --no-gpg-verify photon2 http://10.197.103.204:8080 photon/3.0/x86_64/minimal photon/3.0/x86_64/full
root@photon-host-cus [ ~ ]# ostree remote list
photon
photon2
root@photon-host-cus [ ~ ]# ostree remote show-url photon2
http://10.118.101.86
&lt;/code>&lt;/pre>&lt;p>Where is this information stored? There is an extra config file created per each remote:&lt;/p>
&lt;pre>&lt;code>root@photon-host-cus [ ~ ]# cat /etc/ostree/remotes.d/photon2.conf
[remote &amp;quot;photon2&amp;quot;]
url=http://10.118.101.86
branches=photon/3.0/x86_64/minimal;photon/2.0/x86_64/full;
gpg-verify=false
&lt;/code>&lt;/pre>&lt;p>You may have guessed what is the effect of &lt;code>--no-gpg-verify option&lt;/code>.&lt;br>
Obviously, remotes could also be deleted.&lt;/p>
&lt;pre>&lt;code>root@photon-host-cus [ ~ ]# ostree remote delete photon2
root@photon-host-cus [ ~ ]# ostree remote list
photon
&lt;/code>&lt;/pre>&lt;h2 id="list-available-branches">List available branches&lt;/h2>
&lt;p>If a host has been deployed from a specific branch and would like to switch to a different one, maybe from a different server, how would it know what branches are available? In git, you would run &lt;code>git remote show origin&lt;/code> or &lt;code>git remote -a&lt;/code> (although last command would not show all branches, unless you ran &lt;code>git fetch&lt;/code> first).&lt;/p>
&lt;p>Fortunately, in Photon OS 3.0 and higher, the hosts are able to query the server, if summary metadata has been generated, as we&amp;rsquo;ve seen in &lt;a href="../file-oriented-server-operations/#creating-summary-metadata">Creating summary metadata&lt;/a>. This command lists all branches available for remote &lt;strong>photon2&lt;/strong>.&lt;/p>
&lt;pre>&lt;code>root@photon-host-cus [ ~ ]# ostree remote refs photon2
photon2:photon/3.0/x86_64/base
photon2:photon/3.0/x86_64/full
photon2:photon/3.0/x86_64/minimal
&lt;/code>&lt;/pre>&lt;h2 id="switching-branches-rebasing">Switching branches (rebasing)&lt;/h2>
&lt;p>If you have an installed Photon 1.0 or 1.0 Rev2 that you want to carry to 3.0, you need to rebase it.&lt;/p>
&lt;p>See &lt;a href="../install-or-rebase-to-photon-os-3#rebasing-a-host-from-photon-10-to-30">Rebasing a host from Photon 1.0 to 3.0&lt;/a>.&lt;/p></description></item><item><title>Docs-V3: Running container applications between bootable images</title><link>/docs-v3/administration-guide/photon-rpm-ostree/running-container-applications-between-bootable-images/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs-v3/administration-guide/photon-rpm-ostree/running-container-applications-between-bootable-images/</guid><description>
&lt;p>In this chapter, we want to test a docker application and make sure that all the settings and downloads done in one bootable filetree are going to be saved into writable folders and be available in the other image, in other words after reboot from the other image, everything is available exactly the same way.&lt;br>
We are going to do this twice: first, to verify an existing bootable image installed in parallel and then create a new one.&lt;/p>
&lt;h2 id="downloading-a-docker-container-appliance">Downloading a docker container appliance&lt;/h2>
&lt;p>Photon OS comes with docker package installed and configured, but we expect that the docker daemon is inactive (not started). Configuration file /usr/lib/systemd/system/docker.service is read-only (remember /usr is bound as read-only).&lt;/p>
&lt;pre>&lt;code>root@sample-host-def [ ~ ]# systemctl status docker
* docker.service - Docker Daemon
Loaded: loaded (/usr/lib/systemd/system/docker.service; disabled)
Active: inactive (dead)
root@sample-host-def [ ~ ]# cat /usr/lib/systemd/system/docker.service
[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
After=network-online.target
Wants=network-online.target
[Service]
Type=notify
# the default is not to use systemd for cgroups because the delegate issues still
# exists and systemd currently does not support the cgroup feature set required
# for containers run by docker
ExecStart=/usr/bin/dockerd
ExecReload=/bin/kill -s HUP $MAINPID
# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity
# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
#TasksMax=infinity
TimeoutStartSec=0
# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes
# kill only the docker process, not all processes in the cgroup
KillMode=process
# restart the docker process if it exits prematurely
Restart=on-failure
StartLimitBurst=3
StartLimitInterval=60s
[Install]
WantedBy=multi-user.target
&lt;/code>&lt;/pre>&lt;p>Now let&amp;rsquo;s enable docker daemon to start at boot time - this will create a symbolic link into writable folder /etc/systemd/system/multi-user.target.wants to its systemd configuration, as with all other systemd controlled services.&lt;/p>
&lt;pre>&lt;code>root@sample-host-def [ ~ ]# systemctl enable docker
Created symlink /etc/systemd/system/multi-user.target.wants/docker.service -&amp;gt; /lib/systemd/system/docker.service.
root@sample-host-def [ ~ ]# ls -l /etc/systemd/system/multi-user.target.wants
total 0
lrwxrwxrwx 1 root root 34 Sep 10 10:48 docker.service -&amp;gt; /lib/systemd/system/docker.service
lrwxrwxrwx 1 root root 36 Sep 4 04:59 iptables.service -&amp;gt; /lib/systemd/system/iptables.service
lrwxrwxrwx 1 root root 35 Sep 4 04:59 machines.target -&amp;gt; /lib/systemd/system/machines.target
lrwxrwxrwx 1 root root 36 Sep 4 04:59 remote-fs.target -&amp;gt; /lib/systemd/system/remote-fs.target
lrwxrwxrwx 1 root root 39 Sep 4 04:59 sshd-keygen.service -&amp;gt; /lib/systemd/system/sshd-keygen.service
lrwxrwxrwx 1 root root 32 Sep 4 04:59 sshd.service -&amp;gt; /lib/systemd/system/sshd.service
lrwxrwxrwx 1 root root 44 Sep 4 04:59 systemd-networkd.service -&amp;gt; /lib/systemd/system/systemd-networkd.service
lrwxrwxrwx 1 root root 44 Sep 4 04:59 systemd-resolved.service -&amp;gt; /lib/systemd/system/systemd-resolved.service
&lt;/code>&lt;/pre>&lt;p>To verify that the symbolic link points to a file in a read-only directory, try to make a change in this file using vim and save. you&amp;rsquo;ll get an error: &amp;ldquo;/usr/lib/systemd/system/docker.service&amp;rdquo; E166: Can&amp;rsquo;t open linked file for writing&amp;quot;.&lt;/p>
&lt;p>Finally, let&amp;rsquo;s start the daemon, check again that is active.&lt;/p>
&lt;pre>&lt;code>root@sample-host-def [ ~ ]# systemctl start docker
root@sample-host-def [ ~ ]# systemctl status -l docker
* docker.service - Docker Application Container Engine
Loaded: loaded (/lib/systemd/system/docker.service; enabled; vendor preset: disabled)
Active: active (running) since Tue 2019-09-10 10:54:32 UTC; 14s ago
Docs: https://docs.docker.com
Main PID: 2553 (dockerd)
Tasks: 35 (limit: 4711)
Memory: 148.2M
CGroup: /system.slice/docker.service
|-2553 /usr/bin/dockerd
`-2566 docker-containerd --config /var/run/docker/containerd/containerd.toml
Sep 10 10:54:31 photon-76718dd2fa33 dockerd[2553]: time=&amp;quot;2019-09-10T10:54:31.421759662Z&amp;quot; level=info msg=&amp;quot;pickfirstBalancer: HandleSubConnStateChange: 0xc420312f90, CONNECTING&amp;quot; module=grpc
Sep 10 10:54:31 photon-76718dd2fa33 dockerd[2553]: time=&amp;quot;2019-09-10T10:54:31.421935355Z&amp;quot; level=info msg=&amp;quot;pickfirstBalancer: HandleSubConnStateChange: 0xc420312f90, READY&amp;quot; module=grpc
Sep 10 10:54:31 photon-76718dd2fa33 dockerd[2553]: time=&amp;quot;2019-09-10T10:54:31.421980614Z&amp;quot; level=info msg=&amp;quot;Loading containers: start.&amp;quot;
Sep 10 10:54:31 photon-76718dd2fa33 dockerd[2553]: time=&amp;quot;2019-09-10T10:54:31.886520281Z&amp;quot; level=info msg=&amp;quot;Default bridge
(docker0) is assigned with an IP address 172.17.0.0/16. Daemon option --bip can be used to set a preferred IP address&amp;quot;
Sep 10 10:54:32 photon-76718dd2fa33 dockerd[2553]: time=&amp;quot;2019-09-10T10:54:32.027763113Z&amp;quot; level=info msg=&amp;quot;Loading containers: done.&amp;quot;
Sep 10 10:54:32 photon-76718dd2fa33 dockerd[2553]: time=&amp;quot;2019-09-10T10:54:32.468277184Z&amp;quot; level=info msg=&amp;quot;Docker daemon&amp;quot;
commit=6d37f41 graphdriver(s)=overlay2 version=18.06.2-ce
Sep 10 10:54:32 photon-76718dd2fa33 dockerd[2553]: time=&amp;quot;2019-09-10T10:54:32.468441587Z&amp;quot; level=info msg=&amp;quot;Daemon has completed initialization&amp;quot;
Sep 10 10:54:32 photon-76718dd2fa33 dockerd[2553]: time=&amp;quot;2019-09-10T10:54:32.684925824Z&amp;quot; level=warning msg=&amp;quot;Could not register builder git source: failed to find git binary: exec: \&amp;quot;git\&amp;quot;: executable file not found in $PATH&amp;quot;
Sep 10 10:54:32 photon-76718dd2fa33 dockerd[2553]: time=&amp;quot;2019-09-10T10:54:32.691070166Z&amp;quot; level=info msg=&amp;quot;API listen on /var/run/docker.sock&amp;quot;
Sep 10 10:54:32 photon-76718dd2fa33 systemd[1]: Started Docker Application Container Engine.
&lt;/code>&lt;/pre>&lt;p>We&amp;rsquo;ll ask docker to run Ubuntu Linux in a container. Since it&amp;rsquo;s not present locally, it&amp;rsquo;s going to be downloaded first from the official docker repository &lt;a href="https://hub.docker.com/_/ubuntu/">https://hub.docker.com/_/ubuntu/&lt;/a>.&lt;/p>
&lt;pre>&lt;code>root@sample-host-def [ ~ ]# docker ps -a
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
root@sample-host-def [ ~ ]# docker run -it ubuntu
Unable to find image 'ubuntu:latest' locally
latest: Pulling from library/ubuntu
35c102085707: Pull complete
251f5509d51d: Pull complete
8e829fe70a46: Pull complete
6001e1789921: Pull complete
Digest: sha256:d1d454df0f579c6be4d8161d227462d69e163a8ff9d20a847533989cf0c94d90
Status: Downloaded newer image for ubuntu:latest
&lt;/code>&lt;/pre>&lt;p>When downloading is complete, it comes to Ubuntu root prompt with assigned host name 7029a64e7aa3, that is actually the Container ID. Let&amp;rsquo;s verify it&amp;rsquo;s indeed the expected OS.&lt;/p>
&lt;pre>&lt;code>root@sample-host-def [ ~ ]# docker run -it ubuntu
Unable to find image 'ubuntu:latest' locally
latest: Pulling from library/ubuntu
d3a1f33e8a5a: Pull complete
c22013c84729: Pull complete
d74508fb6632: Pull complete
91e54dfb1179: Already exists
library/ubuntu:latest: The image you are pulling has been verified. Important: image verification is a tech preview feature and should not be relied on to provide security.
Digest: sha256:fde8a8814702c18bb1f39b3bd91a2f82a8e428b1b4e39d1963c5d14418da8fba
Status: Downloaded newer image for ubuntu:latest
root@7029a64e7aa3:/# cat /etc/os-release
NAME=&amp;quot;Ubuntu&amp;quot;
VERSION=&amp;quot;18.04.3 LTS (Bionic Beaver)&amp;quot;
ID=ubuntu
ID_LIKE=debian
PRETTY_NAME=&amp;quot;Ubuntu 18.04.3 LTS&amp;quot;
VERSION_ID=&amp;quot;18.04&amp;quot;
HOME_URL=&amp;quot;https://www.ubuntu.com/&amp;quot;
SUPPORT_URL=&amp;quot;https://help.ubuntu.com/&amp;quot;
BUG_REPORT_URL=&amp;quot;https://bugs.launchpad.net/ubuntu/&amp;quot;
PRIVACY_POLICY_URL=&amp;quot;https://www.ubuntu.com/legal/terms-and-policies/privacy-policy&amp;quot;
VERSION_CODENAME=bionic
UBUNTU_CODENAME=bionic
root@7029a64e7aa3:/#
&lt;/code>&lt;/pre>&lt;p>Now let&amp;rsquo;s write a file into Ubuntu home directory&lt;/p>
&lt;pre>&lt;code>echo &amp;quot;Ubuntu file&amp;quot; &amp;gt;&amp;gt; /home/myfile
root@7029a64e7aa3:/home# cat /home/myfile
Ubuntu file
&lt;/code>&lt;/pre>&lt;p>We&amp;rsquo;ll exit back to the Photon prompt and if it&amp;rsquo;s stopped, we will re-start it.&lt;/p>
&lt;pre>&lt;code>root@7029a64e7aa3:/# exit
exit
root@sample-host-def [ ~ ]# docker ps -a
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
7029a64e7aa3 ubuntu &amp;quot;/bin/bash&amp;quot; 6 minutes ago Exited (0) 11 seconds ago gifted_dijkstra
root@photon-host-cus1 [ ~ ]# docker start 7029a64e7aa3
7029a64e7aa3
root@photon-host-cus1 [ ~ ]# docker ps -a
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
7029a64e7aa3 ubuntu &amp;quot;/bin/bash&amp;quot; 7 minutes ago Up 21 seconds gifted_dijkstra
&lt;/code>&lt;/pre>&lt;h2 id="rebooting-into-an-existing-image">Rebooting into an existing image&lt;/h2>
&lt;p>Now let&amp;rsquo;s reboot the machine and select the other image. First, we&amp;rsquo;ll verify that the docker daemon is automaically started.&lt;/p>
&lt;pre>&lt;code>root@photon-host-cus1 [ ~ ]# systemctl status docker
* docker.service - Docker Application Container Engine
Loaded: loaded (/lib/systemd/system/docker.service; enabled; vendor preset: disabled)
Active: active (running) since Tue 2019-09-10 10:54:32 UTC; 13min ago
Docs: https://docs.docker.com
Main PID: 2553 (dockerd)
Tasks: 55 (limit: 4711)
Memory: 261.3M
CGroup: /system.slice/docker.service
|-2553 /usr/bin/dockerd
...
&lt;/code>&lt;/pre>&lt;p>Next, is the Ubuntu OS container still there?&lt;/p>
&lt;pre>&lt;code>root@photon-host-cus1 [ ~ ]# docker ps -a
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
7029a64e7aa3 ubuntu &amp;quot;/bin/bash&amp;quot; 9 minutes ago Up 2 minutes gifted_dijkstra
&lt;/code>&lt;/pre>&lt;p>It is, so let&amp;rsquo;s start it, attach and verify that our file is persisted, then add another line to it and save, exit.&lt;/p>
&lt;pre>&lt;code>root@photon-host-cus1 [ ~ ]# docker start -i 7029a64e7aa3
root@7029a64e7aa3:/# cat /home/myfile
Ubuntu file
root@7029a64e7aa3:/# echo &amp;quot;booted into existing image&amp;quot; &amp;gt;&amp;gt; /home/myfile
root@7029a64e7aa3:/# exit
exit
&lt;/code>&lt;/pre>&lt;h2 id="reboot-into-a-newly-created-image">Reboot into a newly created image&lt;/h2>
&lt;p>Let&amp;rsquo;s upgrade and replace the .0 image by a .3 build that contains git and also perl_YAML (because it is a dependency of git).&lt;/p>
&lt;pre>&lt;code>root@photon-host-cus1 [ ~ ]# rpm-ostree status
TIMESTAMP (UTC) VERSION ID OSNAME REFSPEC
* 2015-09-04 00:36:37 3.0_tp2_minimal.2 092e21d292 photon photon:photon/tp2/x86_64/minimal
2015-08-20 22:27:43 3.0_tp2_minimal 2940e10c4d photon photon:photon/tp2/x86_64/minimal
root@photon-host-cus1 [ ~ ]# rpm-ostree upgrade
Updating from: photon:photon/tp2/x86_64/minimal
43 metadata, 209 content objects fetched; 19992 KiB transferred in 0 seconds
Copying /etc changes: 5 modified, 0 removed, 19 added
Transaction complete; bootconfig swap: yes deployment count change: 0
Freed objects: 16.2 MB
Added:
git-2.1.2-1.ph3tp2.x86_64
perl-YAML-1.14-1.ph3tp2.noarch
Upgrade prepared for next boot; run &amp;quot;systemctl reboot&amp;quot; to start a reboot
root@photon-host-cus1 [ ~ ]# rpm-ostree status
TIMESTAMP (UTC) VERSION ID OSNAME REFSPEC
2015-09-06 18:12:08 3.0_tp2_minimal.3 d16aebd803 photon photon:photon/tp2/x86_64/minimal
* 2015-09-04 00:36:37 3.0_tp2_minimal.2 092e21d292 photon photon:photon/tp2/x86_64/minimal
&lt;/code>&lt;/pre>&lt;p>After reboot from 3.0_tp2_minimal.3 build, let&amp;rsquo;s check that the 3-way /etc merge succeeded as expected. The docker.service slink is still there, and docker demon restarted at boot.&lt;/p>
&lt;pre>&lt;code>root@photon-host-cus1 [ ~ ]# ls -l /etc/systemd/system/multi-user.target.wants/docker.service
lrwxrwxrwx 1 root root 38 Sep 6 12:50 /etc/systemd/system/multi-user.target.wants/docker.service -&amp;gt; /usr/lib/systemd/system/docker.service
root@photon-host-cus1 [ ~ ]# systemctl status docker
* docker.service - Docker Daemon
Loaded: loaded (/usr/lib/systemd/system/docker.service; enabled)
Active: active (running) since Sun 2015-09-06 12:56:33 UTC; 1min 27s ago
Main PID: 292 (docker)
CGroup: /system.slice/docker.service
`-292 /bin/docker -d -s overlay
...
&lt;/code>&lt;/pre>&lt;p>Let&amp;rsquo;s revisit the Ubuntu container. Is the container still there? is myfile persisted?&lt;/p>
&lt;pre>&lt;code>root@photon-host-cus1 [ ~ ]# docker ps -a
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
7029a64e7aa3 ubuntu &amp;quot;/bin/bash&amp;quot; 5 days ago Exited (0) 5 days ago gifted_dijkstra
55825c961f95 ubuntu &amp;quot;/bin/bash&amp;quot; 5 days ago Exited (127) 5 days ago distracted_shannon
root@photon-host-cus1 [ ~ ]# docker start 57dcac5d0490
root@57dcac5d0490:/# cat /home/myfile
Ubuntu file
booted into existing image
root@57dcac5d0490:/# echo &amp;quot;booted into new image&amp;quot; &amp;gt;&amp;gt; /home/myfile
&lt;/code>&lt;/pre></description></item><item><title>Docs-V3: Install or rebase to Photon OS 3.0</title><link>/docs-v3/administration-guide/photon-rpm-ostree/install-or-rebase-to-photon-os-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs-v3/administration-guide/photon-rpm-ostree/install-or-rebase-to-photon-os-3/</guid><description>
&lt;p>Photon OS 3.0 provides full RPM-OSTree functionality, it lets the user drive it, rather than provide a pre-defined solution as part of the installation.&lt;/p>
&lt;p>The number of packages included in the RPMS repo in Photon OS 3.0 increased significantly, compared to 1.0. To keep the ISO at reasonable size, Photon OS 2.0 no longer includes the compressed ostree.repo file, that helped optimize both the server and host install in 1.0 or 1.0 Rev2. That decision affected the OSTree features we ship out of the box. Customer could achieve the same results by several additional simple steps, that will be explained in this chapter. In addition, there is a new way to create a host raw image at server.&lt;/p>
&lt;h2 id="composing-your-own-rpm-ostree-server">Composing your own RPM-OSTree Server&lt;/h2>
&lt;p>You can compose your own RPM-OSTRee server in the following two ways:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>By Manually executing the below command:&lt;/p>
&lt;pre>&lt;code>root [ /srv/rpm-ostree ]# ostree --repo=repo init --mode=archive-z2
root [ /srv/rpm-ostree ]# rpm-ostree compose tree --repo=repo photon-base.json
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>By installing &lt;code>rpm-ostree-repo package&lt;/code> . This provides the script to create the repo tree which act as server by executing a single command.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="installing-an-rpm-ostree-host">Installing an RPM-OSTree host&lt;/h2>
&lt;p>Automated host install is supported, as explained in &lt;a href="../installing-a-host-against-custom-server-repository/#automated-install-of-a-custom-host-via-kickstart">Chapter 7.2 Automated install of a custom host via kickstart&lt;/a>.&lt;/p>
&lt;h2 id="rebasing-a-host-from-photon-10-to-30">Rebasing a host from Photon 1.0 to 3.0&lt;/h2>
&lt;p>If kickstart sounds too complicated and we still want to go the UI way there is a workaround that requires an extra step. Also, if you have an installed Photon 1.0 or 1.0 Rev2 that you want to carry to 3.0, you need to rebase it. Notice that I didn&amp;rsquo;t say &amp;ldquo;upgrade&amp;rdquo;.&lt;/p>
&lt;p>Basically the OSTree repo will switch to a different branch on a different server, following the new server&amp;rsquo;s branch versioning scheme. The net result is that the lots of packages will get changed to newer versions from newer OSTree repo, that has been composed from a newer Photon OS 3.0 RPMS repo. Again, I didn&amp;rsquo;t say &amp;ldquo;upgraded&amp;rdquo;, neither the rebase command output, that lists &amp;ldquo;changed&amp;rdquo; packages. Some obsolete packages will be removed, new packages will be added, either because they didn&amp;rsquo;t exist in 2.0 repo, or because the new config file includes them.&lt;br>
The OS name is the same (Photon), so the content in /var and /etc will be transferred over.&lt;/p>
&lt;ol>
&lt;li>To install fresh, deploy a Photon 1.0 Rev2 host default, as described in &lt;a href="../installing-a-host-against-default-server-repository/">Chapter 2&lt;/a>. Of course, if you already have an existing Photon OS 1.0 host that you want to move to 2.0, skip this step.&lt;/li>
&lt;li>Edit /ostree/repo/config and substitute the url, providing the IP address for the Photon OS 2.0 RPM-OSTree server installed above. This was explained in &lt;a href="../remotes/#switching-repositories">Chapter 10&lt;/a>.&lt;br>
ostree should confirm that is the updated server IP for the &amp;ldquo;photon&amp;rdquo; remote.&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>root@ostree-host [ ~ ]# ostree remote show-url photon
http://10.197.103.175:8000/repo
&lt;/code>&lt;/pre>&lt;ol start="3">
&lt;li>
&lt;p>Rebase your host to the new 2.0 server and Refspec.&lt;/p>
&lt;pre>&lt;code>root@ostree-host [ ~ ]# ostree remote add photon-2 http://10.197.103.204:8000/repo --no-gpg-verify
root@ostree-host [ ~ ]# rpm-ostree rebase photon-2:photon/3.0/x86_64/minimal
Rebasing to photon-2:photon/3.0/x86_64/minimal
â ‰ Receiving objects: 99% (1541/1549) 478.3 kB/s 107.1 MB
Receiving objects: 99% (1541/1549) 478.3 kB/s 107.1 MB... done
Staging deployment... done
Upgraded:
docker 18.06.2-3.ph3 -&amp;gt; 18.06.2-4.ph3
gmp 6.1.2-2.ph3 -&amp;gt; 6.1.2-3.ph3
gobject-introspection 1.58.0-2.ph3 -&amp;gt; 1.58.0-3.ph3
gzip 1.9-1.ph3 -&amp;gt; 1.9-2.ph3
linux 4.19.65-3.ph3 -&amp;gt; 4.19.69-1.ph3
mpfr 4.0.1-1.ph3 -&amp;gt; 4.0.1-2.ph3
ostree 2019.2-1.ph3 -&amp;gt; 2019.2-2.ph3
ostree-grub2 2019.2-1.ph3 -&amp;gt; 2019.2-2.ph3
ostree-libs 2019.2-1.ph3 -&amp;gt; 2019.2-2.ph3
zlib 1.2.11-1.ph3 -&amp;gt; 1.2.11-2.ph3
Added:
efibootmgr-15-1.ph3.x86_64
efivar-36-1.ph3.x86_64
tar-1.30-3.ph3.x86_64
Run &amp;quot;systemctl reboot&amp;quot; to start a reboot
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>Check the status&lt;/p>
&lt;pre>&lt;code>root@ostree-host [ ~ ]# rpm-ostree status
State: idle
AutomaticUpdates: disabled
Deployments:
* ostree://photon-1:photon/3.0/x86_64/minimal
Version: 3.0_minimal.2 (2019-09-18T08:22:15Z)
BaseCommit: c8f2b116b067d7695f9033bf2a99505198269354e157c0f2d5b78266cb874239
LayeredPackages: createrepo_c rpm wget
ostree://photon:photon/1.0/x86_64/minimal
Version: 1.0_minimal.1 (2017-01-11T02:18:42)
BaseCommit: 28dc49ecb4604c0bc349e4445adc659491a1874c01198e6253a261f4d59708b7
LayeredPackages: createrepo_c rpm wget
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ol>
&lt;p>You may now reboot to the new Photon OS 3.0 image.&lt;/p>
&lt;h2 id="creating-a-host-raw-image">Creating a host raw image&lt;/h2>
&lt;p>It is now possible to run at server a script that is part of RPM-OStree package, to create a host raw mage.&lt;/p></description></item></channel></rss>